<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>권칠환</author>
    <comments>
        <comment>
            <author>허현옥</author>
            <date>2005-12-01T00:00:00-05:00</date>
            <content>제가 보기엔 이번주 온라인 미팅때 한분씩 맡으신 부분의 산출물(?)에 대해서 설명하고, 그에 대해서 다른 분들의 생각을 말씀하시다 보면 좀더 윤곽이 잡힐것 같네요.. 현재로써는 고객의 요청사항이나 데이타들이나 전부다 rough 하니까요...^^ 찬찬히 갑시당..^^</content>
        </comment>
        <comment>
            <author>부기흡</author>
            <date>2005-12-01T00:00:00-05:00</date>
            <content>Good idea.</content>
        </comment>
        <comment>
            <author>박경종</author>
            <date>2005-12-02T00:00:00-05:00</date>
            <content>Couse Type와 Course ID로 이원화한 이유는 2가지입니다.&lt;br&gt;우리학교에서 한의학과정이외에 다른 학과를 개설한다면 Course type으로 과정을 분류하고자 해서 만든 것입니다. 또 동일 학과내에서도 나름대로 분류가 있습니다. 예를 들면 한의학과정도 침구, 한약, 기초이론, Western Medicine, 임상등으로 나누면 이 부분을 Course ID로도 분류할 수 있으나, Course type으로 분류하려고 합니다. 간혹 과목의 분류가 변경될 수도 있기 때문입니다.&lt;br&gt;&lt;br&gt;First Consulting date를 Table에서 제외하고, First Consulting date가 필요시 첫번째 Consult date에서 가져오는 것도 방법이겠습니다. Data redundancy방지를 위해.....  &lt;br&gt;&lt;br&gt;성적표는 학생별로 매학기마다 발급됩니다.&lt;br&gt;관계설정은 Define Transcrpit(3) 참조.&lt;br&gt;</content>
        </comment>
        <comment>
            <author>부기흡</author>
            <date>2005-12-02T00:00:00-05:00</date>
            <content>Can you list the current course type (formal) names we can use today? I know the list will grow.</content>
        </comment>
    </comments>
    <content>UML이랑. 전체 고객이요구한 데이터 요소들 및 &lt;br&gt;관계규정 테이블 모델링을 일치 시킬 필요가 있을것 같습니다.&lt;br&gt;entity 관계만 규정하고.. entity내 유사 속성들은 삭제하는 방법으로&lt;br&gt;접근하고 있습니다..(정규화)..&lt;br&gt;1. course_history(고객이 정한 entity)의 요소들을 보면&lt;br&gt;&amp;nbsp;&amp;nbsp; courseid, term, instructor, textbook, comments&lt;br&gt;2. course_title(고객이 정한 entity)의 요소들&lt;br&gt;&amp;nbsp;&amp;nbsp; coursetype,coursetitle,units, hours, creation_date, comment.&lt;br&gt;1.2 모두가 course라는 하나의 entity로 묶이지 않나요?&lt;br&gt;유사 속성들을 내포하고 있기에..하나의 entity로 묶었습니다.&lt;br&gt;이것도, 고객이 course_history를 학생의 얼마나 이 코스를 들었는가에 대해서&lt;br&gt;규정한다면, course_history의 속성들이 다르게 정의되면서, 또 다른 entity를 &lt;br&gt;뽑아낼 필요가 있을것 같습니다.&lt;br&gt;&lt;br&gt;또 짚고 넘어가야 할게, 중복성 요소들을 제거하는데 있습니다.&lt;br&gt;entity 관계도에서 도식화 했듯이, consult_history의 consultiingdate와 student_info의 firstcontactdate가 중복되었다고 봅니다.&lt;br&gt;시나리오상, 학생이 첫 방문했을때, 컨설턴트가..그 학생을 처음 만나는데..&lt;br&gt;그 날이..이 두개의 다른 attribute들의 데이터가 될수 있다고 봅니다.&lt;br&gt;&lt;br&gt;마지막을 transcript entity에 대한 정의 입니다.&lt;br&gt;고객이 이 transcript(성적표?)를 학생이 학 학기(term)이 끝나면 바로 발급하는것인지, 아니면, 학생이 수강하는 과정이 여러개인데..성적표에 성저마크를 &lt;br&gt;클래스 마다 표현하는것인지?&lt;br&gt;(적다보니..transcipt는 코스랑, 학생이랑 같이 묶어야 되지 않나 싶네요)&lt;br&gt;근데.관계는 어떻게 규정할지는 모르겠네요?&lt;br&gt;&lt;br&gt;아니면, </content>
    <postId>01525245-B254-4E03-B3A2-C04EDF9F7A28</postId>
    <pubDate>2005-12-01T00:00:00-05:00</pubDate>
    <title>관계..</title>
</post>
