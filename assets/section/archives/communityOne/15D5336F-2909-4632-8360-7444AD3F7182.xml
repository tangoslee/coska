<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>김민</author>
    <comments/>
    <content>JCF를 통해 이문제를 풀어볼려고 하면 다음과 같이 이야기 할수 있을것 같습니다.&#xD;
Java Collections Framework 라고 불리워지는 Collections API는 JDK 1.2에 새롭게 추가 된 자료구조 클래스 패키지를 말합니다. 데이터를 다룰 때 반드시 필요한 클래스의 모음으로써 JAVA 프로그래머라면 꼭 숙지하고 있어야만 합니다.&#xD;
&#xD;
Collections API 의 interface 들&#xD;
java.util.Collection : 순서에 관계없는 객체들의 단순한 모임&#xD;
java.util.Set : 중복되지 않는 객체들의 집합, Collection 상속&#xD;
java.util.List : 순차적으로 나열된 구조, Collection 상속&#xD;
java.util.Map : key 와 value 로 이루어진 구조&#xD;
java.util.SortedSet : 값들이 정렬된 Set , Set을 상속&#xD;
java.util.SortedMap : key 가 정렬된 Map, Map을 상속&#xD;
java.util.Vector : 크기가 가변적인 배열&#xD;
java.util.HashSet : set 인터페이스의 기본구현&#xD;
java.util.TreeSet : HashSet과 같으나 정렬기능이 추가됨. java.util.ArrayList : 크기가 가변적인 List &#xD;
java.util.LinkedList : Double Linked List&#xD;
java.util.HashMap : Map 인터페이스의 기본구현&#xD;
java.util.TreeMap : HashMap 과 같으나 정렬기능이 추가됨.&#xD;
java.util.Hashtable : Map 인터페이스를 구현하는 클래스&#xD;
&#xD;
이중 흔히들 가변적 Array를 쓸때는 Vector, ArrayList를 많이 씁니다. 제 생각에는 황성규씨께서 Arguments로 던지고자하는것이 꼭꼭 String Array어야 하는 문제인데, 만약 그러하다면 Vector나 ArrayList를 통한 방법(황성규씨께서 하신데로)밖에 없을것 같고, 그렇지 않아도 되면 Vector나 ArrayList 또는 LinkedList를 바로 Arguments로 쓰시는것이 훨씬 효율적이지 않으까 합니다.&#xD;
&#xD;
</content>
    <postId>15D5336F-2909-4632-8360-7444AD3F7182</postId>
    <pubDate>2002-04-11T00:00:00-04:00</pubDate>
    <title>RE: How to build String array dynamically?</title>
</post>
