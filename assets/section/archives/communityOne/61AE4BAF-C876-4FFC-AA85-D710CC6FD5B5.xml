<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>황성규</author>
    <comments>
        <comment>
            <author>고상호</author>
            <date>2004-10-19T00:00:00-04:00</date>
            <content>Spencer는 역시 천재야!</content>
        </comment>
    </comments>
    <content>오랫만에 민용형님이 글을 올리셨는데 아무도 리플을 안달면 서운하실까봐 몇자 적습니다...&#xD;
&#xD;
좋은 프로그래머는 누구인가?&#xD;
누구나 한번쯤 생각해 봤을 거라생각합니다.&#xD;
&#xD;
제가 생각하는 좋은 프로그래머는 ...&#xD;
"좋은 프로그램을 짜는 사람" 입니다.&#xD;
아~ 이런 싱겁기는...&#xD;
&#xD;
그럼 좋은 프로그램이란 무었인가?&#xD;
여기엔 아마도 많은 이견이 있겠지요.&#xD;
제 생각에 좋은 프로그램은 "Maintainable한 프로그램" 같습니다.&#xD;
&#xD;
프로그램을 한다는 사람들은 대개 자기만의 스타일이 있지요.&#xD;
그리고 가끔은 자기가 하는일이 예술이라는 착각을 하곤합니다.&#xD;
그래서 남들이 나의 예술세계를 이해하지 못할경우 답답해 하기도 하고... 아니면 남들이 내 예술을 이해하지 못해야 진정 내 예술이 빛난다고 생각하는 사람도 있구요.&#xD;
특히나 남의 예술작품 내가 고쳐야 하는게 무지 싫지요.&#xD;
&#xD;
&#xD;
민용형님이 제시한 두가지 문제에 대한 저의 답입니다.&#xD;
&#xD;
1번) Number formatting (이건 코볼이 훨 낫죠)&#xD;
&lt;pre&gt;&#xD;
        long value=6472918815L;&#xD;
        String pattern = "000000000000";&#xD;
        DecimalFormat myFormatter = new DecimalFormat(pattern);&#xD;
        String result = myFormatter.format(value);&#xD;
&#xD;
&lt;/pre&gt;&#xD;
&#xD;
&#xD;
2번) Magic square (odd number)&#xD;
대학때 포트란(파스칼인가?) 시험문제로 나왔던 기억이...&#xD;
알고리즘은 이미 나와 있습니다. &#xD;
http://user.chollian.net/~brainstm/mbj/mbj_odd.htm&#xD;
&#xD;
자바로 다시한번 구현해 봤습니다.&#xD;
&#xD;
&lt;pre&gt;&#xD;
&#xD;
import java.util.*;&#xD;
import java.text.*;&#xD;
&#xD;
/**&#xD;
 * @author spencer&#xD;
 */&#xD;
public class MagicSquare {&#xD;
&#xD;
    public static void printMagicSquare(int dim) {&#xD;
        int square[][];&#xD;
        &#xD;
        square = new int[dim][dim];&#xD;
        int lastRow = 0;&#xD;
        int lastCol = dim / 2;&#xD;
&#xD;
        for (int i=1;i&lt;=dim*dim;i++) {&#xD;
        	if (i==1)&#xD;
                square[lastRow][lastCol] = i;&#xD;
            else {&#xD;
                int newRow = lastRow - 1;&#xD;
                int newCol = lastCol + 1;&#xD;
                &#xD;
                if (newRow &lt; 0 &amp;&amp; newCol &gt;= dim) {&#xD;
                	newRow = lastRow + 1;&#xD;
                    newCol = lastCol;&#xD;
                } else if (newRow &lt; 0) {&#xD;
                    newRow = dim - 1;&#xD;
                } else if (newCol &gt;= dim) {&#xD;
                	newCol = 0;&#xD;
                }&#xD;
                &#xD;
                if (square[newRow][newCol] &gt; 0) {&#xD;
                	newRow = lastRow + 1;&#xD;
                    newCol = lastCol;&#xD;
                }&#xD;
                &#xD;
                square[newRow][newCol] = i;&#xD;
                lastRow = newRow;&#xD;
                lastCol = newCol;&#xD;
            }&#xD;
        }&#xD;
        &#xD;
        for (int i=0; i&lt;dim; i++) {&#xD;
            for (int j=0; j&lt;dim; j++)&#xD;
            	System.out.print("\t" + square[i][j]);&#xD;
            System.out.println();&#xD;
        }&#xD;
    }&#xD;
    &#xD;
    public static void main(String args[]) {&#xD;
        printMagicSquare(5);&#xD;
    }&#xD;
}&#xD;
&#xD;
&#xD;
	17	24	1	8	15&#xD;
	23	5	7	14	16&#xD;
	4	6	13	20	22&#xD;
	10	12	19	21	3&#xD;
	11	18	25	2	9&#xD;
&lt;/pre&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
신민용 wrote:&#xD;
&gt; 프로그램을 짤때,&#xD;
&gt; 어떻게 짜는 사람이 고수일까요?&#xD;
&gt; 신기술을 잘이용하는 사람인가요?&#xD;
&gt; 아니면 정말 깔끔하게 로직컬하게 짜는 사람인가요?&#xD;
&gt; 신기술을 금방 배우지만, 로지컬 thinking은&#xD;
&gt; 경험으로서만 배울수 있지요.&#xD;
&gt; 프로그램머를 편하게 해주는 넘 많은&#xD;
&gt; 신기술의 등장이 프로그램머들의&#xD;
&gt; 로직컬 마인드를 많이 줄어들게 한게 요즘 추세죠..&#xD;
&gt; 만 사람을 뽑는다면, 어떤 사람을 선택할건가요?&#xD;
&gt; 잡다한 기술이 많은 사람?&#xD;
&gt; 아니면 쌈박하게 프로그램 논리 전개하는 분인가요...&#xD;
&gt; &#xD;
&gt; 한가지 예를 들어,&#xD;
&gt; int를 String르로 변환 하면서,&#xD;
&gt; leading zero를 12자리 기준으로 하고 싶다..&#xD;
&gt; 어캐 코딩하십니까?&#xD;
&gt; ex)&#xD;
&gt; int input = 6472918815; // 음  내 새 샐폰 전화임다.&#xD;
&gt; String result = Integer.toString(input);&#xD;
&gt; while(true)&#xD;
&gt; {&#xD;
&gt;      if ( result.length() &lt; 12 )&#xD;
&gt;      {&#xD;
&gt;           result = "0" + result;&#xD;
&gt;      }&#xD;
&gt;      else  break;&#xD;
&gt; }&#xD;
&gt; &#xD;
&gt; 얼듯 보면 복잡해 보이지 않습니까?&#xD;
&gt; 더쉬운 방법도있는데?&#xD;
&gt; anybody to put the improved code here in reply?&#xD;
&gt; &#xD;
&gt; 그래서 좀 생각을 하면서 프로그램 합시다.&#xD;
&gt; 한국인의 긍지를 살리면서....&#xD;
&gt; &#xD;
&gt; 그래서 문제를 내겠습니다.&#xD;
&gt; 상당히 어렵습니다.(로직컬하게..)&#xD;
&gt; 대충 다음 부류로 나눌수 있겟습니다.&#xD;
&gt; 1. 밤새워 꼭 쌈빡한 로직을 세우는 사람..&#xD;
&gt; 2. 곰곰히 연구한 끝에 포기하는 사람.&#xD;
&gt; 3. 도저히 어캐 시작해야 할찌 엄두가 안나는 사람.&#xD;
&gt; 4. 문제가 뭔지 해깔리는 사람.&#xD;
&gt; 5. 좌우간 관심이 없는 사람.&#xD;
&gt; &#xD;
&gt; 우리 모임에 1번에 해당하는 사람이 많았으면 좋겠군요..&#xD;
&gt; &#xD;
&gt; 그럼 문제 들어갑니다.&#xD;
&gt; 아주 간단합니다.&#xD;
&gt; 다음 의  interface에 대한 implemenation을 만드십시요.&#xD;
&gt; public interface GetTable&#xD;
&gt; {&#xD;
&gt;        public List  getTable(int dim);&#xD;
&gt; }&#xD;
&gt; &#xD;
&gt; 홀수input의 방진을 해결하는 프로그램임다.&#xD;
&gt; 예을 들어 input이 3 이면&#xD;
&gt; 6  1  8&#xD;
&gt; 7  5  3&#xD;
&gt; 2  9  4&#xD;
&gt; 아시다시피 상하 모든열(대각선까지)의 합이 같아야 합니다.&#xD;
&gt; 이겨우에는 3개의 list를 가진 list가 return 되어야 합니다.&#xD;
&gt; &#xD;
&gt; 5을 입력하면 5개의 list를 가진 list가 return되어햐 하겠죠.&#xD;
&gt; &#xD;
&gt; 한번 도전해보시면,로직컬 마인드에 상당한 도움이&#xD;
&gt; 될것 입니다.&#xD;
&gt; 24시간안에 풀면 천재로 분류될수 있겠죠?&#xD;
&gt; &#xD;
&gt; &#xD;
&gt; &#xD;
&gt; &#xD;
&gt; &#xD;
&gt; &#xD;
&gt; &#xD;
&gt; </content>
    <postId>61AE4BAF-C876-4FFC-AA85-D710CC6FD5B5</postId>
    <pubDate>2004-10-19T00:00:00-04:00</pubDate>
    <title>RE: s/w 로직 경진대회를 합시다.</title>
</post>
