<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>김성욱</author>
    <comments/>
    <content>이계영씨 답변 감사합니다.&#xD;
&#xD;
다른 분들을 위해 우선 왜 VO를 쓰는지에 대해 이해가 필요할 것 같습니다. 그냥 CMP를 통해 엔티티빈에 값을 할당하고 빼는 것은 VO를 쓰느냐 안쓰느냐의 문제와는 다른 부분입니다. 컨테이너가 알아서 엔티티빈의 변수들에 값을 할당하고 DB와 persistence를 유지하는 것은 외부 VO를 써서 엔티티빈의 값들을 가지고 뭔가를 해보려는 목적과 전혀 다른 부분입니다. 이렇게 말씀 드리면 좀 이해가 더 되셨을 것 같네요. 부연하면, 여기서 VO를 쓴다는 것은 현재 엔티티빈의 값(status)을 다른 비즈니스 메소드에서 가져다가 이용하고자 하려는 것입니다. 이때, VO에 선언될만한 getter/setter 메소드를 다시 엔티티빈 내에서 명시적으로 호출하는 경우 퍼포먼스의 문제가 발생한다는 게 전문가의 의견입니다.&#xD;
&#xD;
올려주신 샘플은 엔티티빈 그 자체로서는 전혀 하자가 없지만, 제기한 문제와는 좀 다른 내용이구요.&#xD;
--&gt; 이 부분을 다음과 같이 정정합니다. 제가 좀 더 자세히 분석했어야 하는데 그렇지 못했네요.&#xD;
"올려주신 샘플은 getter/setter를 멤버변수에 맞춰 그대로 전부 선언한 샘플이라 제가 말씀드린 '문제점'에 해당되는 내용입니다."&#xD;
&#xD;
만약 코드를 이렇게 작성하면 어떻게 될까요? 시간되시는 분들은 직접 해보시고 결과를 리포팅해주시면 감사하겠습니다.&#xD;
&#xD;
1. 일단 VO는 외부 별도 클래스로 정의합니다.&#xD;
2. VO를 위한 Getter/Setter 메소드는 그 안에서든 EJB안에서든 어디서도 정의, 명시되지 않습니다.&#xD;
3. 엔티티 빈 내에 값 할당 시: this.firstName = &amp;lt;VO_name&amp;gt;.firstName;&#xD;
4. VO로 값 할당 시: &amp;lt;VO_name&amp;gt;.firstName = this.firstName;&#xD;
&#xD;
이게 제가 알고 싶은 부분입니다. 통상 C++에서나 많이 봐왔던 방식인데, CMP든 BMP든 전혀 고민할 대상이 안되는 거구요. 과연 이 방식이 먹혀들까요? 저도 좀 더 연구해보고 의견 올리도록 하겠습니다.</content>
    <postId>88DD4A21-DB21-491F-8F4F-60911CB17E68</postId>
    <pubDate>2003-09-04T00:00:00-04:00</pubDate>
    <title>RE: Sample code using Value Object</title>
</post>
