<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>Brendan(김성욱)</author>
    <comments>
        <comment>
            <author>이성기</author>
            <date>2002-09-11T00:00:00-04:00</date>
            <content>sample code를 보여주겠어요?</content>
        </comment>
    </comments>
    <content>실수로 '수정' 버튼을 눌러서, 다시 작성합니다. &#xD;
&#xD;
============================================&#xD;
우선 Spencer님께 다시 답변을 드리자면,&#xD;
&#xD;
JDK의 documentation 내용은 저도 보았고 그걸 올리려다가 기본적인 사항인지라 안 올렸습니다. &#xD;
&#xD;
"Statement가 Close될때 ResultSet도 자동적으로 Close된다."&#xD;
&#xD;
이 문구는 사실상, 그 즉시 반환되는 것은 아니란 겁니다. 따라서, Garbage Collection의 policy에 따라 '언젠가' 반환되는 것을 말하는 것이죠. 커뮤니티원의 성격상 이 자원반환이 critical할지는 저도 의문입니다만 일반적인 enterprise급 어플리케이션에 있어서는 강제로 close해 주시는 게 정답입니다. 이는 경험과 performance 측정으로 입증된 결과고, 실제 여러 프로그래머들이 추천하는 방식입니다.&#xD;
&#xD;
물론 선배님 말씀대로, 그 시간에 design, architecture에 신경을 더 쓰는 게 좋다는 것을 부정하는 것은 아닙니다만 어쨌든 알면 좋은 내용인지라 한번 올려봤습니다.&#xD;
&#xD;
바쁘실텐데, 괜한 시간 뺏은 것은 아닌지요. 감사합니다.&#xD;
&#xD;
===============================================&#xD;
이성기 선배님에 대한 답변입니다.&#xD;
&#xD;
너무 간단하지라 적기에 송구합니다.&#xD;
&#xD;
다음은 method 내부 코드이고요, 임의로 가정해 봤습니다.&#xD;
&#xD;
Statement stmt = null;&#xD;
ResultSet rs = null;&#xD;
&#xD;
...&#xD;
String sql="select ...";&#xD;
...&#xD;
rs = stmt.executeQuery(sql);&#xD;
...&#xD;
rs.close();&#xD;
stmt.close();&#xD;
...&#xD;
&#xD;
뭐 이정도 되겠구요, 순서만 지키시면 됩니다. 물론 ResultSet의 close()는 SQLException에 대해 catch 하시는 거구요.&#xD;
&#xD;
저의 프로그래밍 스타일은 상기 코드의 클래스 내 구조를&#xD;
&#xD;
try {&#xD;
&#xD;
   //SQL 처리부&#xD;
&#xD;
} catch (SQLException e) {&#xD;
&#xD;
   //오류 처리부&#xD;
&#xD;
} finally {&#xD;
&#xD;
   //ResultSet, Statement, Connection등의 자원반환부&#xD;
   //기타 마무리 처리부&#xD;
&#xD;
}&#xD;
&#xD;
이런 블록으로 분류하는 것입니다만...&#xD;
&#xD;
이상입니다.</content>
    <postId>308E5025-F7CB-4C57-B0CF-A451F6767625</postId>
    <pubDate>2002-09-11T00:00:00-04:00</pubDate>
    <title>샘플코드라 하시니, 쑥스럽네요.</title>
</post>
