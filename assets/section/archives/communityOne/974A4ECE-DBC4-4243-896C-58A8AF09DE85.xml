<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>이계영</author>
    <comments>
        <comment>
            <author>이성기</author>
            <date>2003-11-21T00:00:00-05:00</date>
            <content>Of course, the BaseDAO is part of framework. Any framework change is followed by several test with depending classes. Thanks for your comment. It was useful. Are you coming on Saturday?</content>
        </comment>
    </comments>
    <content>This is my PERSONAL opinion and can't gurantee acurracy&#xD;
&#xD;
My question is more like about when we use DTO and DAO, when we don't.&#xD;
If it is simple application, I wouldn't consider to use it with following reasons:&#xD;
- learning curve&#xD;
- longer implementation: you'll write small amount of code after learning the frameworks(or patterns)&#xD;
&#xD;
If it is bigger application, I would consider to use it:&#xD;
- learning cost can be compensated by productivity and maintainability since the app can be understanded easily if you know the framework&#xD;
- You can hire people who know the framework but you can't hire who knows your proprietary way&#xD;
&#xD;
&#xD;
if we make extra business classes (AccountBO, AccountDTO, AccountDAO) on former case, is it reasonable approach?&#xD;
- as mentioned above, if the app is bigger or growing, framework approach is better.&#xD;
&#xD;
&#xD;
Hashmap approach:&#xD;
- Yes, it reduces number of classes&#xD;
- If you are OOP fanatic, you won't use&#xD;
- it makes testing and maintenace harder&#xD;
- if it hasn't list of objects, or n-dimensional data&#xD;
&#xD;
Even DAO, we can make BaseDAO contains database connection, update, batch and query logic. This BaseDAO takes SQLDataSet from caller:&#xD;
- you'll end up a mammoth BaseDAO class&#xD;
- if several people works on the class, the chances are you'll need a merge everytime you check-in&#xD;
- when there is a change in the class, you'll need run all the test cases over again&#xD;
</content>
    <postId>974A4ECE-DBC4-4243-896C-58A8AF09DE85</postId>
    <pubDate>2003-11-21T00:00:00-05:00</pubDate>
    <title>RE: any other benefit to keep DTO </title>
</post>
