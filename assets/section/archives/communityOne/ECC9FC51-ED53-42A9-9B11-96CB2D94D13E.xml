<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>김성욱</author>
    <comments/>
    <content>우선 결론적으로 말씀 드리자면, 이성기씨가 갖고 계신 '불편한' 생각이 웹개발에 있어서의 지극히 표준적인 방법이라고 생각합니다. 즉 다음과 같은 목적, 분류의 클래스는 categorize해둠을 누구나 권장하고 또 그게 상식처럼 되어 있다고 봅니다.&#xD;
&#xD;
- DAO&#xD;
- DTO&#xD;
- Helper Class&#xD;
- etc.&#xD;
&#xD;
상기 클래스는 물론 비즈니스 layer에 해당하는 것들로서 Struts가 제시하고 있는 JSP, Form Bean, Action Bean과 mix하시거나 혼동하시지 않으셨으면 합니다. 그래서 이런 스트럿스 관련 클래스들을 만드시는 것을 backend에서 돌아가는 클래스를 만드는 작업과 함께 묶어서 생각하심은 안되리라 사료됩니다. 어쨌거나, 말씀하신대로 실사용에 있어서 다소 많은 클래스의 분류로 인해 '귀찮음'이 없지는 않지요. &#xD;
&#xD;
[DTO]에 관한 생각 ----&#xD;
&#xD;
제가 예전에 본 어떤 개발자는 Form Bean을 마치 DTO(Bean이라고 부르겠습니다.)처럼 이용하여 사용하던데요... (즉 JSP와 함께 입출력용으로도 쓰고, 테이블에서 가져온 정보를 넣어두는 container로도 쓰고요.) 이렇게 하면 클래스의 'number' 자체는 줄일 수 있지만, 궁극적인 Bean으로서의 재활용성이나 portability는 당연히 떨어질 수 밖에 없습니다. 늘 Struts라는 라이브러리와 함께 묶여 다니기 때문이죠. 개인적으로 저는 이 방법을 좋아하지 않습니다. 만약, 이런 Bean들을 DB와 연계된 엔티티라고 보고 자동적으로 생성해 줄 수 있는 툴이 있다면 우리의 수고를 많이 줄일 수는 있을 것입니다만.(이런 게 있나요?) 한편, 참고로만 말씀 드리면 제가 최근 추구하는 방법은 Bean에서의 seter/getter를 모두 빼버리고 직접 변수에 값을 할당하고 빼내는 방법으로서, 불필요한 메소드 사용으로 발생하는 시간을 단축하는 것입니다. 어떤 패키지의 클래스라도 접근이 가능하게 하기 위해 물론 public으로 멤버변수를 정의하는 것이고요.&#xD;
&#xD;
[DAO]에 관한 생각 --&#xD;
&#xD;
이 부분에 대해서는 사실상 여러가지 방법이 있을 것 같습니다. 전에 말씀 드렸듯이 저는 static query를 따로 준비해둠으로서, 어떤 비즈니스 요구가 발생할 경우, 이를 공유해서 쓰는 방식이 제 경험상의 권장방법이었습니다. 그러나, 저또한 예전에는 Hashmap을 이용하여 컬럼명/index, 테이블 이름, 조건, 쿼리 종류 등을 넘겨주고 동적으로 Query 문장을 획득하는 클래스를 만들어 쓰기도 했습니다. 이러면 물론 모든 쿼리를 저장해두어야 하는 불편함은 없어지죠. 그러나, 이 방법이 정말 좋은 방법이라고는 생각하지 않습니다. 타이핑에 대한 번거로움은 줄어들지만, 아주 복잡한 쿼리를 수용하기 위해서는 시간 투입이 많이 필요한 것이니까요. 또한, Statement/PreparedStatement/CallableStatement 등 개인이 선호하는 방법과 목적이 조금씩 다름에 따라, 최적화된 모종의 방식이 있으리라 봅니다. 그렇게 되면 DAO내에서의 클래스들의 구조 또한 상이해질 수 있게 되겠죠. 결국, DAO는 다양한 케이스를 전부 수용하는 라이브러리로 구축되어 언제 어떤 환경에서의 개발이라도 적용될 수 있도록 하는 게 최대 관건이라고 보입니다.&#xD;
&#xD;
[Struts]에 관한 부연 --&#xD;
&#xD;
처음 개발 시 얼마나 많은 클래스를 만들어야 하느냐보다 나중에 추가 개발 시, 혹은 대폭 수정 시 얼마나 많은 benefit이 있을 수 있느냐가 스트럿스 발명(?)에 있어서 첫 관건이었음을 이해해 주셨으면 합니다.&#xD;
참, 전에는 설명을 다 드리지 못했지만, Form Bean과 Action 클래스들의 상위에는 Base 클래스들을 만드십시오. 즉, ActionForm과 Action을 상속받은 클래스를 만드시고, 어플리케이션에서 돌아가는 모든 관련 클래스는 이놈들을 상속받아서 쓰도록 하십시오. Base 클래스의 1차 목적은 backend에서 관여하지 않는 - Http 관련 정보, internationalization, Security, Session management 등이 있을 수 있습니다. 기회가 되면 어떤 정보들을 이 상위 클래스에 탑재해서 쓸 수 있는가를 전해드리도록 하겠습니다.&#xD;
&#xD;
이성기님의 질문에 적절히 전부 답변하지는 못했지만, 제가 가진 작은 생각이라도 나누어보고 싶었습니다. 그럼 즐.고. 하세요. - 즐겁게 고민하세요. :-)&#xD;
</content>
    <postId>ECC9FC51-ED53-42A9-9B11-96CB2D94D13E</postId>
    <pubDate>2003-11-21T00:00:00-05:00</pubDate>
    <title>RE:  DAO and Struts 구현방안...</title>
</post>
