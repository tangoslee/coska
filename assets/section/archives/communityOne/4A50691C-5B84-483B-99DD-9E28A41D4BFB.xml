<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>이성기</author>
    <comments/>
    <content>2.3 homework-변경  &#xD;
세번째 강좌 를 위한 숙제가 다소 어려울 것 같아, 기간을 2주를 주어 5월 4일까지 완료하시고, 5월 5일 어린이날 저녁 7:30에 마지막 강의시간때 평가를 하도록 하겠습니다.당일은 밤 10시 이전까지 수업을 마친후에 &#xD;
근처 Pub에서 종강피로회를 갖도록 합니다. &#xD;
&#xD;
다음 수업은 4월 28일 토요일 PM 7:30분입니다. 착오없으시길 바랍니다. &#xD;
4월 28일수업에서는 &#xD;
abstract inheritance, &#xD;
e-commerce framework&#xD;
JDBC&#xD;
등에 관하여 설명을 하여 마지막 숙제를 해결할수 있도록 할 예정입니다. &#xD;
저의 소스코드를 보고 질문거리를 많이 만들어 오시기 바랍니다. &#xD;
http://webhome.idirect.com/~scottl/java/e-commerce/frame &#xD;
&#xD;
&#xD;
숙제 - &#xD;
&#xD;
1. 지난번에 한 AddressBook을 Servlet으로 변경한 코드를 자신의 tomcat에서 &#xD;
수행하여보고, 2nd homework인 inventory manager에서 사용된 디자인 개념을 적용하여 변경시킵니다. 주요한 점은 presentation logic을 주 servlet에서 분리시키고, 이를 위한 별도의 서브렛이 존재하고, inventory 에서 사용된 ControlServlet을 적용시켜서 servlet에서 business logic을 완전히 제거합니다. 따라서 Presentation(View) - Control - Business Logic Session Object - Data Entity Objects - Data Access - RDB 의 구조로 변경시키는 겁니다. &#xD;
&#xD;
이런식으로 공통점을 찾아 인수분해를 하는 겁니다. &#xD;
&#xD;
Apply the framework in store to 'AddressBook' with DB access. &#xD;
&#xD;
Constraints&#xD;
&#xD;
1. You may access address book (any) relational database for this application.(optional) &#xD;
&#xD;
2. servlet application on tomcat. &#xD;
&#xD;
3. Apply the framework to AddressBook&#xD;
&#xD;
Point area&#xD;
&#xD;
1. Well application of framework&#xD;
&#xD;
2. ListDB and RDB access do not affect other modules.(optional)&#xD;
&#xD;
Due date&#xD;
5월 4일 금요일 &#xD;
&#xD;
2.3 class - April 28 7:30 PM&#xD;
2.4 class - May 5. 7:30 PM&#xD;
More detail, please go back to previous page. &#xD;
* &#xD;
http://board.leesys.co.kr/NeoBoard_2.0/NeoBoard.cgi?/Db=skboard&amp;Mode=list&amp;Block=19&amp;SearchID=&amp;fmSearchType=&amp;fmKeyWord=&#xD;
* &#xD;
 &#xD;
</content>
    <postId>4A50691C-5B84-483B-99DD-9E28A41D4BFB</postId>
    <pubDate>2001-04-28T00:00:00-04:00</pubDate>
    <title>2.3 homework</title>
</post>
