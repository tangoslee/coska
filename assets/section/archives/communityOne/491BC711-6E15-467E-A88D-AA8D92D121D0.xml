<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>이성기</author>
    <comments/>
    <content>첫수업에 참가하기전에 읽고 연습해야 할것들.. &#xD;
지난번 OOP과정에 참여하지 않고 이번 과정을 듣는 분은 &#xD;
다음 논문을 읽어보시면 첫강의이해에 도움이 됩니다. &#xD;
&#xD;
MVC model and framework &#xD;
OOP with Java &#xD;
&#xD;
이 토론 게시판의 목록으로 빠져나가면 &#xD;
OOP with Java class topic이 있습니다. 그안에 위 논문의 글이 있습니다. &#xD;
If you are new member to this kind of class, &#xD;
recommend you to make an 'AddressBook' program. &#xD;
( detail -&gt; &#xD;
Mandatory - All assigments must be handed in with a class diagram, pseudo code and source code. &#xD;
&#xD;
- (1) Address Book When user need to find out email address, search it by person name. &#xD;
Also user can find telephone number by email address or person name. &#xD;
This address book should have addition, revision and deletion menus. &#xD;
&#xD;
You can make this application by Java application, Servlet, JSP or Swing &#xD;
Neither fancy nor detail funcionality is required. Simple is the best. &#xD;
RDB is not required. You may implement the data storage in external file or internal hard code list. ) &#xD;
&#xD;
For all, &#xD;
I recommend you to exercise this tutorial before joining the first class &#xD;
http://java.sun.com/docs/books/tutorial/rmi/end.html &#xD;
&#xD;
Round 1.1 class --------------&#xD;
6월12일 첫 수업내용 그리고 숙제  &#xD;
이날은 처음 만나는 날로서, &#xD;
1. 자바넷트웍에 대하여 설명합니다. &#xD;
- Socket communication &#xD;
- RMI &#xD;
에 대하여 설명합니다. &#xD;
&#xD;
숙제,, &#xD;
마감일은 6월 25일. &#xD;
1. Make a calculator program between server and client &#xD;
client send two numeric and call method 'add(arg1, arg2)' or subtract(arg1, arg2). Then server has methods to calculate and return the result to client. &#xD;
This program run on doc prompt and must use Socket for communication. &#xD;
&#xD;
2. Make same calculator program using RMI instead of socket. Still client program send request 'add(arg1, arg2)' to server and Server has add() and substract() method implementation. Server returns the result to client. &#xD;
&#xD;
You need to run this program on your PC and print out the source code and bring them on next class. &#xD;
&#xD;
Here is startup sample code for 1. Socket communication &#xD;
&#xD;
http://webhome.idirect.com/~scottl/java/ejb/rmi.jar &#xD;
http://webhome.idirect.com/~scottl/java/ejb/socket.jar &#xD;
&#xD;
드디어 여름이 돌아왔습니다. 숨가쁘게 기다리던 여름입니다. &#xD;
여러분에게 프로그램의 기쁨을 드리려고 이제 1.1 (1라운드 1 강좌숙제)를 드립니다. &#xD;
상세한 내용은 http://comm1.wo.to -&gt; discussion -&gt; IBM EJB course 에 나와있으며 &#xD;
화요일 강좌에 사용할 코드를 여기 첨부합니다. &#xD;
socket.jar - 이것은 기본 소켓 프로그램이며 이를 바탕으로 여러분의 숙제가 진행됩니다. &#xD;
rmi.jar - 이것도 아주 쉬운 형태의 RMI code 입니다. &#xD;
&#xD;
모두 one shot에 smooth 하게 돌아가지는 않습니다. 강의를 마치고 얼른 귀가하여 돌려보세요. &#xD;
숙제는 6월 25일까지 이며 안해도 상관은 없습니다. &#xD;
단 두번째 수업시간에는 socket과 rmi에 관한 시험을 치룹니다. &#xD;
숙제를 하신 분은 쉽게 풀수 있는 문제가 나갑니다. &#xD;
&#xD;
&#xD;
이성기 &#xD;
첨부한 파일을 푸는 방법은 모르면 시간을 내여 &#xD;
java.sun.com 에서 java tutorial 에서 jar file 다루는 법을 배우십시요. (search 'jar') &#xD;
이것은 앞으로 지겹게 사용할 자바 명령어가 될 겁니다. &#xD;
여러분의 공부를 위해서 푸는 방법은 여기서 부언하지 않겠습니다. &#xD;
&#xD;
두번째 수업은 ------------------------------&#xD;
&#xD;
DB2 - creating new database, &#xD;
      control tables&#xD;
      access database from VAJ&#xD;
      &#xD;
Visual Age for Java : VAJ&#xD;
- project, class, package management&#xD;
- classpath setup&#xD;
- command argument define&#xD;
- compile, debug, print out, import, export&#xD;
- source code version management&#xD;
- add/delete Features&#xD;
&#xD;
(잠정적으로 )&#xD;
- Websphere Test Environment&#xD;
- simple servlet/JSP running on WTE&#xD;
&#xD;
수업예정일, &#xD;
6월 17일, 일요일 8시 - 905 팀, &#xD;
&#xD;
6월 19일, 8시 화 - 416 팀, &#xD;
수업은 8시정시에 시작 중간에 10분 휴식, 10시정각에 마치도록 &#xD;
노력하겠습니다. 강의준비관계로 수업시간 바로 직전까지 제가 바쁨니다.&#xD;
&#xD;
두번째 숙제 - &#xD;
이 숙제는 6월 18/19 강의시에 설명이 되어 여러분에게 1주일의 기간을 드립니다. &#xD;
&#xD;
이 수업전에 교재 part 1 - (page 62)까지 인쇄하여 오셔야 수업듣기에 편합니다. &#xD;
다음 사이트에 있는 zip 을 download하세요. &#xD;
두번째 숙제에 사용될 ddl file 이 있습니다. &#xD;
&#xD;
ftp://www.redbooks.ibm.com/redbooks/SG246144/ &#xD;
&#xD;
숙제의 상세한 내용. &#xD;
1. DB2 숙제 &#xD;
create new database named 'EJBBANK' and populate table and data with ejbbank.ddl and ejbbank.sql file in the above downloaded zip file &#xD;
&#xD;
2. Program - 'balance check &#xD;
After your DB2 database and tables are created, you should create a small program to display account balance by client id. You don't need to implement UI for this. Simple dos screen will be enough. You need to follow the data structure defined in Chapter 4 of Part 1 of text book. &#xD;
Don't worry about EJB or RMI. This is simple database access and display program but you should use VAJ3.5 as you learned on second class. &#xD;
&#xD;
Due date - Jun 25, 2001 &#xD;
Only send your source code in attach file to 'rojaware@bigfoot.com' . &#xD;
&#xD;
 Round 1.3 class ---------------------&#xD;
세번째의 수업 6월26일 화 8시  &#xD;
세번째 수업은 오는 26일 화 8시에 합니다. &#xD;
먼저 숙제를 하면서 겪었던 이야기를 듣고나서, 구두 시험을 보겠습니다. 숙제를 다한분은 대답을 할수 있는 질문입니다. &#xD;
이날은 1997년도로 돌아가서 EJB라는 개념을 어렴풋이 잡아갈때, Java Architector의 동기고민이 무었이 였나를 추적해 보도록 하겠습니다. 왜 EJB를 만들게 되었을까, 최초의 문제는 무었이 였을까? 나라면 어떻게 했을까? 소크라테스의 문답식으로 &#xD;
진행이 됩니다. &#xD;
&#xD;
주로 이론중심이며, 시간을 보아서 Websphere Test Environment에 대하여 설명하겠습니다. &#xD;
&#xD;
I will explain on chapter 2 of part 1. &#xD;
"EJBs ; Basic concepts and architecture" &#xD;
&#xD;
If time is allowed, I will cover of Websphere Test Environment and first EJB running. &#xD;
&#xD;
Round 1.4 class --------------------------------------&#xD;
Source code for Calculator - echo version - is &#xD;
http://webhome.idirect.com/~scottl/java/ejb/Calculator/ &#xD;
----------------------------------- &#xD;
I will do text book chapter 9 session bean. &#xD;
&#xD;
네번째 수업은 잠정적으로 7월 1일로 합니다. &#xD;
이날의 주요강의 내용은 &#xD;
- Session bean에 관하여 설명하고, &#xD;
- VAJ 의 WTE(websphere test environment)에서 EJB deploy / test 하는 법을 설명합니다. &#xD;
&#xD;
최종적으로 나갈 숙제는 Calculator의 add() , substract()을 &#xD;
session bean을 사용하여 구현하는 겁니다. &#xD;
&#xD;
이로서 제 1 라운드는 &#xD;
- Socket/RMI communication &#xD;
- EJB architecture concept &#xD;
- Session Bean development &#xD;
- VAJ/ DB2 handling &#xD;
- EJB deployment in WTE &#xD;
&#xD;
로 마감이 됩니다. &#xD;
다음 라운드는 8월에 재개할 예정이나, 참가자들이 휴가등의 일정으로 연기를 요청하면 9월부터 재개하겠습니다. &#xD;
&#xD;
Another homework &#xD;
&#xD;
여러분들의 중단없는 공부를 위해서 열의가 있으신 분은 IBM 교재를 따라서 &#xD;
chapter 9까지 해보시기 바랍니다. 이것을 하면 entity bean 과 session bean으로 &#xD;
banking program을 거의 완성하는 것을 말합니다. &#xD;
&#xD;
이숙제를 해보겠다는 분은 저에게 숙제완료약속을 하는 이메일을 보내 주시기 &#xD;
바랍니다. 숙제마감 기간은 7월 20일까지로 하겠습니다. &#xD;
&#xD;
저에게 제출할 코드는 아무것도 없습니다. 완료통보 이메일이면 됩니다. &#xD;
그러면 다음 라운드 시작할 때, 여러분이 구현한 full EJB version banking &#xD;
application에 대하여 설명을 하도록 하겠습니다. &#xD;
그러면 다음 round를 넘어갈때, &#xD;
design idea가 많이 떠오를 것입니다. 즉 다음 round는 EJB를 사용하지 않고, &#xD;
이같은 enterprise application을 구성할때, 어떻게 design을 해야 하는지 가 &#xD;
초두가 될 것같습니다. &#xD;
&#xD;
여름기간에는 제가 많은 시간을 할해하는데 한계가 있어서 (회사의 project &#xD;
완료가 8월, 저의 다른 휴가 일정도 섞여 있고) 강의준비를 많이 못하므로 &#xD;
개인적으로는 9월에 재개하는 것을 생각하고 있습니다. &#xD;
&#xD;
아직은 잠정적이고, 추후 이메일과 homepage를 통해 상세한 사항을 &#xD;
알려드리겠습니다. &#xD;
&#xD;
이성기 &#xD;
&#xD;
 &#xD;
</content>
    <postId>491BC711-6E15-467E-A88D-AA8D92D121D0</postId>
    <pubDate>2001-06-13T00:00:00-04:00</pubDate>
    <title>Round I, 수업일정 저장 </title>
</post>
