<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>이성기</author>
    <comments/>
    <content>회사에서 일하면서 우리는 끊임없이 좋은 디자인과 개발결과물사이에서 갈등하게 됩니다. 잘된 디자인이라는 것은 무었일까요? 미래를 예측하기 힘들기 때문에 수정이 없는 애플리케이션은 없습니다. 다음 글은 이점에서 토론거리를 줍니다. 인용한 글에 대한 여러분의 경험과 의견을 듣고 싶군요. &#xD;
&#xD;
Yust my opinion&#xD;
&#xD;
In a sense I agree with you all. But this is not a black or white anwser you can get on this question. First off all if you are developer on a specified project you need to be result focussed. In this case there does not leave much time for designing a good OO structure for the project. You have to find a balance. Through my experience I have encountered alot of this. &#xD;
In this day off the world alot of people want to be perfect in developing there OO. But it seems that you are all forgetting one thing. Developing software is a bussiness and a question of money. So the client want to see result and as fast as they can. They don't need to see what happens behind the screen. They just want the results. &#xD;
I agree with you partially that there must be a good OO design in order to function well. But this only come by the years of development and extra hours you put yourself in. &#xD;
Another matter is also what is a good OO design. You may create the perfect OO design but after a couple of months it is already out dated or not of any use anymore because development technologies changes constantly. &#xD;
&#xD;
I have alot off admiration to those who can good OO design and find the time for it. &#xD;
But my way off being a good developer is finding a balance between productivity and quality. &#xD;
&#xD;
&#xD;
</content>
    <postId>6551E565-A4AC-4999-B12C-11D9B34FDA99</postId>
    <pubDate>2002-07-10T00:00:00-04:00</pubDate>
    <title>Good OO design 이란 무었일까요?</title>
</post>
