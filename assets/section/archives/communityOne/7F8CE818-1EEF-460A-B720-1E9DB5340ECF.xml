<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>이성기</author>
    <comments/>
    <content>&#xD;
OOP 1 answer  &#xD;
&#xD;
&#xD;
&#xD;
&#xD;
   &lt; login &gt;&#xD;
&#xD;
   User.java&#xD;
   - userID( same as accountID )&#xD;
   - password&#xD;
   + setters&#xD;
   + getters&#xD;
&#xD;
   ListDB.java&#xD;
   - Hashtable (id, Object)&#xD;
   + findItem ( id )&#xD;
   + addItem (Object)&#xD;
   + updateItem (id )&#xD;
   + deleteItem (id )&#xD;
   + listItems()&#xD;
&#xD;
   UserDB.java&#xD;
   - Hashtable (userID, User)&#xD;
   + findUser ( userid )&#xD;
   + addUser (User)&#xD;
   + updateUser (userID)&#xD;
   + deleteUser (userID)&#xD;
   + listUsers()&#xD;
&#xD;
   Login.java&#xD;
   + isValidInput()&#xD;
&#xD;
   (pseudo code for login flow)&#xD;
   outputMessage = null&#xD;
   user id = read user id&#xD;
   password = read password&#xD;
&#xD;
   if not (isValidInput( userid, password ))&#xD;
   {&#xD;
      outputMessage = " null values input "&#xD;
      return outputMessage&#xD;
   }&#xD;
&#xD;
   user = userDB.findUser( user id)&#xD;
   if user = null&#xD;
   {&#xD;
   outputMessage = " user is not found "&#xD;
   } else&#xD;
   {&#xD;
   if password = user.password&#xD;
   {&#xD;
   outputMessage = " successful login "&#xD;
   }else&#xD;
   {&#xD;
   outputMessage = " wrong password "&#xD;
   }&#xD;
   }&#xD;
   return outputMessage&#xD;
&#xD;
   &lt; Balance Check &gt; -------------------&#xD;
   Client.java&#xD;
   - sin&#xD;
   - name&#xD;
   - tel&#xD;
   - address&#xD;
&#xD;
   Account.java&#xD;
   - id ( used as usedID)&#xD;
   - balance&#xD;
   - type&#xD;
   - Client or sin&#xD;
   + getters&#xD;
   + setters&#xD;
   + deposit( balance)&#xD;
   + withdrawal ( balalce )&#xD;
&#xD;
   AccountDB.java &lt;-- ListDB.java&#xD;
&#xD;
   History.java&#xD;
   - accountID&#xD;
   - transaction&#xD;
&#xD;
   Transaction.java&#xD;
   - date&#xD;
   - type ( deposit or pay )&#xD;
   - amount&#xD;
   - receivableName&#xD;
   - payableName&#xD;
&#xD;
   BalanceCheck.java&#xD;
   --------------------&#xD;
   Account = AccountDB.findAccount(accountID)&#xD;
   balance = Account.getBalance()&#xD;
   return balance&#xD;
&#xD;
   &lt; Move &gt;&#xD;
   (Account.java)&#xD;
&#xD;
   (Transaction.java)&#xD;
&#xD;
   FundMove.java&#xD;
   --------------&#xD;
   senderAccountNo = read sender account&#xD;
   receiverAccountNo = read receiver account&#xD;
   amount = read amount&#xD;
&#xD;
   senderAccount = AccountDB.findAccount(senderAccountNo )&#xD;
   receiverAccount = AccountDB.findAccount(receiverAccountNo)&#xD;
&#xD;
   senderAccount.withdrawal(amount)&#xD;
   receiveAccount.deposit(amount)&#xD;
   transaction = create Transaction ( date, type, amount, senderAccount,&#xD;
   receiverAccount )&#xD;
   add transaction to history&#xD;
&#xD;
   outputMessage = "successfully transferred"&#xD;
&#xD;
&#xD;
   &lt; PayBill &gt;&#xD;
   (Account.java)&#xD;
&#xD;
   (Transaction.java)&#xD;
&#xD;
   Bill.java&#xD;
&#xD;
   BillPay.java&#xD;
&#xD;
&#xD;
 &#xD;
</content>
    <postId>7F8CE818-1EEF-460A-B720-1E9DB5340ECF</postId>
    <pubDate>2001-04-28T00:00:00-04:00</pubDate>
    <title>OOP 1 home work answer  </title>
</post>
