<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>최덕선</author>
    <comments/>
    <content>As usual, after many trial and errors, it works now.&#xD;
 Belows are the quick summary for any future references.&#xD;
&#xD;
1) First of all, we have to use { } around the query name. Also have to use resultClass even though document said it is optional.&#xD;
 eg)  @NamedNativeQuery(name="test1", query="{call lh_actual_test(:anything)}", readOnly=true, callable=true, resultClass=LhActual.class)&#xD;
&#xD;
2) Secondly, not sure, but it was related with specific database, in this case, Sybase. &#xD;
  com.sybase.jdbc3.jdbc.SybSQLException: Stored procedure 'lh_actual_test' may be run only in unchained transaction mode. The 'SET CHAINED OFF' command will cause the current session to use unchained transaction mode.&#xD;
&#xD;
3) To address the second problem, we have to call the following command prior to call stored procedure.&#xD;
   PreparedStatement st = getSession().connection().prepareStatement("{call sp_procxmode lh_actual_test, 'chained'}");&#xD;
   st.execute();&#xD;
&#xD;
  or getSession().connection().setAutoCommit(true);&#xD;
  &#xD;
&#xD;
In summary, NamedNativeQuery syntax in hibernate was not clearly documented. &#xD;
Secondly, lots of case hibernate exception messages are not clear, somtime misleading.&#xD;
&#xD;
Nothing perfect. Thanks Brendan for your input.</content>
    <postId>F42A86C2-C7E3-49EE-AF9A-781DEAFC4F0C</postId>
    <pubDate>2009-03-12T00:00:00-04:00</pubDate>
    <title>RE:RE:calling stored procedure in hibernate</title>
</post>
