<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>이홍식</author>
    <comments/>
    <content>javanuri.co.kr 에서 송태일씨가 게시한 내용입니다... &#xD;
&#xD;
***&#xD;
&#xD;
기업시장에서 자바의 활용 실태  &#xD;
  &#xD;
 객체지향 언어의 대명사로 불리고 있는 자바(JAVA). 자바가 국내에 소개되기 시작한 97년도에는 일부 매니아를 중심으로 클라이언트용 객체지향 개발언어로 인식되어 있었다.  &#xD;
&#xD;
객체지향기술이란 공통된 속성과 형태를 가진 데이터와 프로그램을 결합, 모듈화한 뒤 이를 다시 결합해 소프트웨어를 개발하는 것이다. 이 방식을 채택할 경우 객체가 갖고 있는 변수만 바꿔주면 데이터와 프로그램이 자동적으로 변화해 소프트웨어의 생산성을 높이게 된다. 객체지향 프로그래밍의 가장 큰 장점은 다른 소프트웨어를 만들 때 이미 만들어 놓은 객체를 그대로 다시 사용할 수 있다는 점이다.  &#xD;
&#xD;
또 새로운 객체를 단순히 추가시킴으로써 새 프로그램을 쉽게 개발할 수 있다. 한마디로 객체를 조립하여 소프트웨어를 개발, 혹은 변화시키는 방식이 바로 객체지향 프로그래밍인 것이다.  &#xD;
&#xD;
OS 독립된 열린 언어 ‘자바’  &#xD;
썬마이크로시스템즈의 과감한 투자와 더불어 아이비엠 및 反MS 진영이 자바에 관심을 갖기 시작하면서 차세대 객체지향언어로 자바는 그 세력을 빠르게 형성해나갔다. 하지만 과부하를 발생시키는 초기 자바 애플릿 문제와 비주얼베이직, C++이라는 강력한 선점 경쟁자에 의해 그 가능성에 대한 의문이 제기되기도 했다.  &#xD;
&#xD;
이러한 안팎의 문제에도 불구하고 자바는 99년말부터 불기 시작한 e-비즈니스 열풍에 힘입어 클라이언트 서버 환경의 개발언어로 폭넓게 도입되고 있다. 기존 개발언어 시장을 장악해왔던 비주얼베이직이나 C++로는 웹기반 환경의 애플리케이션 개발이나 연동을 깔끔하게 마무리하기란 매우 힘들다. 하지만 운영체제에 독립적인 자바는 웹 서블릿과 궁합이 잘 맞기 때문에 이러한 문제들을 손쉽게 해결해준다. 운영체제가 윈도건 유닉스건 상관없이 웹사이트 구축에서부터 애플리케이션 개발까지 폭넓게 응용되고 있다.  &#xD;
&#xD;
이 당시에는 자바의 쓰임새가 지금처럼 엔터프라이즈 시장까지 확장되지 못했다. 기업 시장에서 제일 중요한 데이터베이스(DB) 등을 연동시킬 수 있는 다양한 인터페이스들이 개발되지 않아 서버 기반의 개발에는 적용될 수 없었다.  &#xD;
&#xD;
하지만 기업시장에 적용할 수 있는 자바 2 플랫폼이 발표되면서 상황은 역전되고 있다. 오히려 기업시장에서 놀라운 성과를 보이고 있다. 특히 J2EE(Java 2 Enterprise Edition)의 서버 스펙의 발표로 클라이언트용이 아닌 서버용 엔터프라이즈 시장을 개척할 수 있었다. J2EE에서도 비즈니스 로직(BL) 부분을 컴파일링할 수 있도록 지원해주는 EJB(Enterprise Java Beans)의 출현은 기업 서버 시장에서의 자바 독식을 예고하는 몸짓이었다.  &#xD;
&#xD;
클라이언트 한계 벗고 기업 시장 진입  &#xD;
EJB 기능을 토대로 자바는 엔터프라이즈 서버 영역에서 확실하게 자리를 잡을 수 있었다. 특히 지난해부터 각종 e-비즈니스 사업들이 본격화되고, 이를 위한 서버 기반의 애플리케이션 구축, 즉 웹 애플리케이션 서버 도입이 크게 늘어나면서 자바의 엔터프라이즈 도입이 한층 확대되고 있는 것이다. 웹 애플리케이션 서버는 기존 미들웨어와 달리 자바 특히, JSP(JavaServer Pages)나 서블릿(Servlet), EJB 등을 기반으로 유저 인터페이스(UI)와 비즈니스 로직 부분을 컴퍼넌트화해 작업할 수 있기 때문에 웹 환경과 연동되는 최적의 e-비즈니스 환경을 구축해준다.  &#xD;
&#xD;
특히 클라이언트와 서버를 모두 자바로 개발할 경우 단일한 개발환경이라서 멀티미디어 환경을 자연스럽게 구현시킬 수 있어 생산성을 높일 수 있다. 특히 확장성도 뛰어나 자바로 개발된 다양한 애플리케이션과의 연동도 손쉽게 이루어진다.  &#xD;
&#xD;
현재 국내에는 20여개의 웹 애플리케이션 서버 제품들이 각축을 벌이고 있다. 지난해에 확보한 사이트와 매출액을 기준으로 보면 BEA의 웹로직과 아이비엠의 웹스피어가 선두를 달리고 있으며, 펜타시스템테크놀로지의 실버스트림, 볼랜드의 앱서버(AppServer), 썬마이크로시스템즈의 아이플래넷 등이 그 뒤를 쫓고 있다.  &#xD;
&#xD;
클라이언트용 프로그램 개발에서는 디자인이라든가 편의성을 가장 중시해 UI 부분과 프리젠테이션 부분만 고려해서 개발하면 됐다. 하지만 기업시장에 적용되는 미들웨어 영역에서는 트랜잭션이 무엇보다 중요하기 때문에 이를 효과적으로 지원할 수 있도록 비즈니스 로직(BL)과 데이터 액세스(DA) 등을 고려해서 컴포넌트하게 개발을 해야 한다. 이러한 부분은 기존 개발언어로는 한계를 지니고 있어, EJB나 JSP가 그 역할을 대행하고 있다. 따라서 자바를 기반으로한 웹 애플리케이션 서버가 e-비즈니스 기업 시장을 장악하게 된 것은 당연한 결과였다.  &#xD;
&#xD;
기업 시장의 수요가 계속 늘어날 전망이기 때문에 관련 시장도 더욱 늘어날 것으로 예측된다.  &#xD;
&#xD;
자바가 다양한 기업환경에 적용되면서 표준화된 규격의 중요성이 한층 커지고 있다. 이러한 필요성을 수용해, 자바2 플랫폼의 각종 규격들이 발표되고 있다. 이들 표준의 근간을 이루고 있는 대표적인 규격으로는 J2SE(Java2 Standard Edition)와 J2EE(Java 2 Enterprise Edition), J2ME(Java 2 Micro Edit-ion) 등이 있다.  &#xD;
&#xD;
J2SE는 기본적인 자바 규격으로 소프트웨어 개발 킷(SDK, JDK)이나 런타임, API 등의 코어 자바 플래폼을 규정하는 부분이다. 반면 J2EE는 엔터프라이즈 영역에 자바를 적용하기 위해 필요한 각종 기술과 SDK와 애플리케이션 모델의 규격을 정의한 것이다. EJB, JSP, JNDI(Java Naming &amp; Direc-tory Interface), JDBC, JMS(Java Message Service), JTA(Java Tran-saction), JTS(Java Transaction Service), SBP(Sun BluePrints), 자바메일 등이 여기에 해당된다.  &#xD;
&#xD;
이밖에 컨슈머 및 임베디드 기술로 J2ME가 있으며, CDC(Connected Device Configuration), CLDC(Conn-ected Limited Device Configuration), CVM(C Virtual Machine), KVM(K Virtual Machine), 퍼스널 자바, 임베디드 자바, 자바 카드, 자바폰, 자바 TV, 지니 등이 여기에 포함된다.  &#xD;
&#xD;
이 중에서 기업 시장과 맞물려 향후 가장 큰 시너지효과를 일으킬 것으로 주목받고 있는 스펙으로는 JMS(Java Message Service)와 JME(Java Micro Edition) 등을 들 수 있다.  &#xD;
&#xD;
표준 인터페이스 작업 ‘한창’  &#xD;
JMS는 최근 나온 오픈 표준 규격으로, B2B 환경에서 EJB가 갖는 한계를 보완하기 위해 만들어졌다. EJB는 온라인 트랜잭션(OLTP) 기반으로 운영되기 때문에 상대방 기업 서버가 다운됐을 때는 제대로 데이터베이스 연동을 할 수 없다. 하지만 메시징 방식을 이용할 경우 상대방 서버가 다운돼도 도착 확인이나 동기식 커뮤니케이션을 통해 효율적으로 업무환경을 구현할 수 있다.  &#xD;
&#xD;
JMS 개념은 B2B 시장에서 가장 주목받는 규격이 될 것으로 관련업계는 내다보고 있다. 특히 선두 기업 메시징 벤더들이 참여한 가운데 개발되고 있기 때문에 기업 애플리케이션 개발에 있어 매우 유용한 툴로 인식되고 있다. 메시징 방식은 일반 PC 뿐만 아니라 모바일 제품(이동통신 단말기, PDA 등)에까지 적용할 수 있어 B2B 시장영역을 폭넓게 확장시킬 수 있다.  &#xD;
&#xD;
JME는 각종 임베디드 시스템의 애플리케이션 개발에 적용되는 자바의 규격이다. PDA나 핸드폰, 셋탑박스 등에 자바 기반의 다양한 소프트웨어가 개발되고 있는 상황에서 이를 지원해주는 JME의 출현은 향후 모바일 시장 성장에 디딤돌 역할을 하게 될 것으로 여겨지고 있다.  &#xD;
&#xD;
자바가 처음 소개됐을 당시 가전제품을 위한 임베디드 운영체제의 성격을 지니고 있었다는 점을 상기했을 때 JME는 결코 자바의 정책과도 무관하지 않다고 볼 수 있다. 특히 전세계 임베디드 시장이 매우 빠르게 성장하고 있음을 볼 때 그 쓰임새는 더욱 커질 전망이다. 국내에서도 이미 자바를 이용해 각종 솔루션들이 개발되고 출시된 상황이다. 지난달에 개최된 모바일 전시회에서는 자바 기반의 PDA와 각종 애플리케이션이 소개된바 있다.  &#xD;
&#xD;
이러한 자바의 기업용 시장 급성장에 대해 마이크로소프트가 제동을 걸고 있다. C#이라는 자바 킬러 프로그램을 공개한 마이크로소프트는 자바 죽이기에 열을 올리고 있다. 클라이언트 개발툴로써 자바는 MS의 비주얼 베이직이나 C++의 상대가 되지 않았으며, 유닉스 기반의 기업 서버시장에서 급성장을 이루고 NT 진영까지 잠식하게 이르렀다. 이러한 자바의 진출을 막기 위한 방패로 C#이 출현하게 되었다. 강력한 개발 편의성과 마케팅력을 토대로 자바 개발자를 끌어안으려 하고 있다. 하지만 아직 개발단계이고 개선해야 할 많은 문제점을 안고 있어 자바와 대등한 경쟁을 벌이기에는 많은 시일이 필요할 것으로 관련업계는 내다보고 있다.  &#xD;
&#xD;
킬러 자바 ‘C#’ 출현…VM 살빼기 절실  &#xD;
C#의 출현은 자바의 성능 향상에도 큰 도움이 될 것으로 보여진다. 자바는 여전히 해결해야 할 많은 문제점들이 남아있다. 점차 나아지겠지만 여유만만하게 대처하다가는 올해말에 정식 발표될 MS의 닷넷 비주얼 스튜디오에게 뒤통수를 맞을 수도 있다.  &#xD;
&#xD;
임베디드 분야에서는 자바가 너무 무겁다는 공통된 지적이 있다. 자바가 임베디드 OS에 OEM 되던가 아니면 자체 OS로 활용되어야 한다는 것이다. 하지만 이 또한 쉽지 않다. 최근 LG텔레콤에서 KVM을 이용한 K자바를 도입했지만 지원할 수 있는 기능의 한계로 효율성이 떨어진다는 우려도 있다.  &#xD;
&#xD;
또한 VM이 기업마다 차이가 있기 때문에 자바를 기반으로 개발된 애플리케이션간에 연동부분에 있어 재구성이 필요하다. 자바를 기반으로 개발된 애플리케이션간에 100% 호환성을 보장한다는 자바의 특장점이 현실에서 적용되지 못하고 있음을 보여준다.  &#xD;
&#xD;
또한 기업인의 마인드도 문제다. 성공적인 e-비즈니스의 환경구현을 위해 고성능의 시스템 구축에만 열을 올리고 있다. CPU의 급속한 발전에도 불구하고 주변기기나 연결방식의 기술향상이 이루어지지 않아 처리속도 부분에서 성능 향상이 전혀 되지 않고 있다. 기업 고객들이 급속하게 늘어나는 상황에서 업무처리(트랜잭션)가 무엇보다 중요한데, 이는 시스템의 증설보다 효율적인 설계와 운영을 통해 해결할 수 있다. 이를 위한 해결책으로 컴포넌트 개념이 주목받고 있다.  &#xD;
&#xD;
또한 자바 2와 관련한 기술을 습득할 수 있는 터전이 마련되어 있지 못한 것도 문제점으로 지적되고 있다. 자바에 관심은 많지만 대부분의 교육코스가 클라이언트 자바를 중심으로 진행되고 있어 기업용 프로그램 설계에는 큰 도움이 되지 못하고 있다.  &#xD;
&#xD;
EJB 기반의 자바 프로그램에 대한 교육과정이 폭넓게 개설되는 것도 자바 발전의 밑거름이 될 것이다.  &#xD;
  &#xD;
 INTERNETWEEK   2001.06.09  &#xD;
</content>
    <postId>EF5609C0-A077-4EC0-831B-29EE2A9B9DF3</postId>
    <pubDate>2001-06-16T00:00:00-04:00</pubDate>
    <title>기업시장에서 자바의 활용 실태  </title>
</post>
