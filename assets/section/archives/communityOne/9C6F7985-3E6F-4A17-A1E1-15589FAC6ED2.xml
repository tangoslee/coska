<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>Andrew</author>
    <comments/>
    <content>강윤정씨..&#xD;
보내주신 소스 잘받았습니다.&#xD;
정말 아주 excellent한 솔류션입니다..&#xD;
미처 생각하지 못했던 새로운 것을 배웠습니다.&#xD;
public synchronized Rule createRuleEngine(String ruleEngineName)&#xD;
   {  try&#xD;
      {&#xD;
         Class aClass = Class.forName(m_PackageName + "." + ruleEngineName );&#xD;
         Constructor con = aClass.getConstructor( new Class[] { } );&#xD;
         aRule = (Rule)con.newInstance( new Object[] { } );&#xD;
      }&#xD;
이부분은 정말 감탄사를 만들게 하는 군요..&#xD;
필요하신분은 강윤정씨께 개인적으로 부탁에서&#xD;
e-mail로 소스를 받으면 많이 도움이될거라 확신합니다.&#xD;
&#xD;
이것에 비하면.. 제가 생각했던 방법은 아주 간단한 겁니다.&#xD;
      public int getNetWage(Rule tax)&#xD;
      {&#xD;
   	      m_tax = tax.getTax(m_baseWage+m_extraWage);&#xD;
         ....}&#xD;
한다음.&#xD;
public static void main(String[] args)&#xD;
{   .......&#xD;
    int netMoney = cal.getNetWage(new Pay());&#xD;
&#xD;
또 다른 솔루션이 올려지기를 기대합니다..&#xD;
역시.. 혼자 책만 보고 연구하면..&#xD;
우물안의 개구리처럼 될수 있겠구나  하고 생각이&#xD;
드는군요..&#xD;
&#xD;
    &#xD;
&#xD;
&#xD;
강윤정 wrote:&#xD;
&gt; Here are the attached sample source zip file.&#xD;
&gt; Please run&#xD;
&gt; &gt;java tax.paycal.CalculatorTest Rule2001&#xD;
&gt; or&#xD;
&gt; &gt;java tax.paycal.CalculatorTest Rule2002&#xD;
&gt; &#xD;
&gt; The argument is the name of specific rule engine&#xD;
&gt; class. You can modify this to reading from the&#xD;
&gt; property file.&#xD;
&gt; &#xD;
&gt; &#xD;
&gt; </content>
    <postId>9C6F7985-3E6F-4A17-A1E1-15589FAC6ED2</postId>
    <pubDate>2001-10-18T00:00:00-04:00</pubDate>
    <title>RE: RE: RE: I like your idea.</title>
</post>
