<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>나수환</author>
    <comments>
        <comment>
            <author>김형태</author>
            <date>2005-07-07T00:00:00-04:00</date>
            <content>ㅋㅋㅋ 여담이 괴담인 것 같습니다. 수고하셨습니다.</content>
        </comment>
        <comment>
            <author>박재홍</author>
            <date>2005-07-07T00:00:00-04:00</date>
            <content>정말 섬뜩한 여담입니다.</content>
        </comment>
        <comment>
            <author>이상윤</author>
            <date>2005-07-08T00:00:00-04:00</date>
            <content>이런 엄청난 괴담을....함께 참여를 못해서 죄송합니다.둘째날 UI에 뵙겠습니다.</content>
        </comment>
        <comment>
            <author>최봉준</author>
            <date>2005-07-08T00:00:00-04:00</date>
            <content>요즘 트렌드(?)가 스와핑이라서 자연스럽게 교육할때 나온 걸로 알고 있습니다. 이러다가 교육팀이 불새는 커녕 꾸리한 병아리로 전락하는 게 아닐까 하는 걱정이 앞서는 군요.&lt;br&gt;우찌됐거나 진호씨, 제가 잘 못 알 고 있었나봅니다. 이상윤씨가 둘째날 담당이 됐어있었으니 UI 및 컨틀롤을 원래 계획대로 진행하면 될 것 같네요. 그럼, 저는 계획대로 세번째 주 파일 핸들링을 맞기로 하죠.&lt;br&gt;</content>
        </comment>
        <comment>
            <author>최선두</author>
            <date>2005-07-08T00:00:00-04:00</date>
            <content>흑...박선두...^^</content>
        </comment>
        <comment>
            <author>나수환</author>
            <date>2005-07-08T00:00:00-04:00</date>
            <content>흑, 남의 귀한 성을 바꾸다니..이런 엄청난 실수를... 정정 (최선두)</content>
        </comment>
    </comments>
    <content>&lt;br&gt;&lt;br&gt;교육내용을 담당한 선생이 올리는것 보다 학생이 올리는것이 좋다하여, 첫교육의 내용및 학생의 느낌을 적어본다.&lt;br&gt;&lt;br&gt;OOP개념의 간단한 C#프로그램을 훌륭한 (박진호및 김석, 박선두, 최봉준)선생들로 부터 알짜만 전수받았다. 앞으로 몇번의 훌륭한 알짜교육이 계속 다른 선생들로 부터 이루워질것이고 그때마다 소위 묻지마! 그냥 따라 하다보면 나중에 경험적으로 이해하고 좀 더 자세히 공부해야할 사항들이 많을것라 생각한다.&lt;br&gt;&lt;br&gt;첫 교육의 묻지마 그냥 이렇게 그려(짜)! 하는 사항을 다시금 여기에 적어 훌룡한 선생및 많은 고수들에게 시정및 격려를 받고자 한다.&lt;br&gt;&lt;br&gt;우선 총각 박진호선생 참 수고했어요!&lt;br&gt;&lt;br&gt;사전에 필기도구를 준비 했어야 했는데, 필기도구도 없이 참여한 학생 - 소위 총없이 전쟁에 참여한다 하여 학창시절 선생들이 매를 엄청나게 때렸던 기억이 난다 - 맞고 시작했어야 하는 분위기 였는데, 참여한 선생들의 너그러운 성품때문에..&lt;br&gt;&lt;br&gt;앞으로 그런 끈기와 멋진 성품기대 또한 해본다.&lt;br&gt;&lt;br&gt;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;생성자 &amp;#8211; 반드시 클래스의 이름과 같이써라 (예외는 있지만)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- 변수 초기화용으로 이용된다&lt;br&gt;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;상속 &amp;#8211; 부자지간의 경우가 예로 들어졌다.&lt;br&gt;&lt;br&gt;&lt;br&gt;using System;&lt;br&gt;public class FileGate {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void SayHello() {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Console.WriteLine("Hello FileGate!");&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void Main() {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FileGate m = new FileGate();&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m.SayHello();&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;br&gt;using System;&lt;br&gt;public class FileGate {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private String name = null;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public FileGate() {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name = "HI, FileGate";&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public String GetList() {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String str = name;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return str;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void Main() {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FileGate ct = new FileGate();&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String s;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s = ct.GetList();&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Console.WriteLine(s);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;주옥같은 여담.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;Private의 개념을 “자신의 와이프” 즉, 자신만의 소유 같은것&lt;br&gt;&amp;nbsp;&amp;nbsp;Public의 개념은 “스워핑의 개념” 즉, 함께공유&lt;br&gt;&amp;nbsp;&amp;nbsp;Protected의 개념은 “근친의 개념” 즉, 상속관계에서 성립&lt;br&gt;&lt;br&gt;&lt;br&gt;다음 두번째는 어떤 주옥같은 단어들이 나올지 자뭇 기대된다.&lt;br&gt;&lt;br&gt;</content>
    <postId>B79FC38B-2AA5-4784-83DE-27ED418079B7</postId>
    <pubDate>2005-07-07T00:00:00-04:00</pubDate>
    <title>[교육 -1강의 내용]</title>
</post>
