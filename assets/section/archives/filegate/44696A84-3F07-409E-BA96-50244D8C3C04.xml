<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>나수환</author>
    <comments/>
    <content>&lt;br&gt;혹 누군가 필요할까 하여, 꿀단지에 꼭꼭 숨겨두었던 자료를 올림.&lt;br&gt;도움되었으면 합니다.&lt;br&gt;&lt;br&gt;나수환....꾸벅&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;gt;안녕하세요. 회의 때에 언급했던 소스관리툴 소개건인데요, 이름이 기억이 안 났었는데, ClearCase였읍니다. 최근에 잡포지션에 무척 많이 언급되는 툴입니다. 저도 써보지 않아서 저의 프로젝트에 적합한지는 잘 모르겠읍니다만, 프로젝트에 사용되면, 잡 구하시거나 경력관리를 위해서 조금이라도 남보다 낫게 보일 수 있게 해주지 생각이 드는군요. 이왕에 소스콘트롤 툴을 쓸거라면, 이 툴을 써보는 것도 괜챦을 것 같군요. 아래는 한국 사이트에서 찾은 툴 소개입니다. 툴 결정하는데 조금이나마 도움이 되었으면 좋겠군요.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;■ 통합변경관리 (Unified Change Management: UCM) &lt;br&gt;&amp;gt; &lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp; 통합 변경 관리는 요구사항 수집에서 릴리즈 시점까지 발생하는 모든 변경 사항들을 관리하기 위해 변경관리 베스트 프랙티스 (Best Practices)를 활용하는 래쇼날만의 접근법입니다. 통합 변경 관리는 개발 주기 전 과정 동안의 일관된 변경 관리 프로세스를 정의하고 있습니다. 이것은 최고의 소프트웨어 개발 프랙티스 Pratices)를 제공하는 포괄적인 프레임워크인 Rational Unified Process의 핵심 컴포넌트입니다. &lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;Rational ClearCase는 세계 시장을 주도하고 있는 형상관리 솔루션입니다. ClearCase는 단순한 버전 관리 시스템을 넘어 개발 주기 단축, 정확한 릴리즈, 신뢰 할만한 빌드와 패치, 병렬 개발 프로세스 구성을 지원합니다. &lt;br&gt;&amp;gt; &lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;gt; &lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;■ 간편한 도입 &lt;br&gt;&amp;gt; &lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;UCM은 별도의 작업 없이도 즉시 사용할 수 있는 선택 사양으로 Rational ClearCase와 Rational &lt;br&gt;&amp;gt;ClearQuest에 들어있습니다. 이 선택 가능한 프로세스는 프로젝트 단위로 적용될 수 있습니다. UCM을 사용한 프로젝트에서는 다음을 위한 작업 단계가 자동화, 가속화 됩니다. &lt;br&gt;&amp;gt;- 개발자의 작업공간을 생성/유지 &lt;br&gt;&amp;gt;- 파일에 발생하는 변경 사항 추적 &lt;br&gt;&amp;gt;- 변경 사항을 주요 개발 라인과 통합 &lt;br&gt;&amp;gt;- 컴포넌트 베이스라인 생성/관리 &lt;br&gt;&amp;gt;- 컴포넌트를 정리하여 새로 시작되는 개발 단계(iteration)로 넘김 &lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;관리자 : 프로젝트 진행 상황 추적과 조직화&lt;br&gt;&amp;gt;UCM이 적용된 프로젝트는 관리자가 시각적으로 프로젝트 조직화, 워크플로우 정의, 프로젝트 메트릭스 추적을 할 수 있게 합니다. 개발 조직들은 오류 수정이나 개선 요구 같은 각 액티비티의 형태에 알맞은 고유의 워크플로우를 정의할 수 있습니다. 기존 비즈니스 프로세스를 반영하도록 워크플로우를 구성함으로써 하향식(top-down) 프로세스 시행 시 범하기 쉬운 함정을 피할 수 있&lt;br&gt;&amp;gt;습니다. 관리자들은 새로 발생된 액티비티들을 우선적으로 수행 가능한 적임자에게 할당하거나 또는 개인 단위로 균등하게 업무를 할당할 수도 있습니다. &lt;br&gt;&amp;gt;포괄적인 보고서는 작업 부하 균일화, 기술적인 차이를 식별, 우선 순위가 높은 모든 업무를 적임자에게 확실하게 할당하는 작업들을 간편하게 수행할 수 있도록 합니다. 프로젝트가 진행되면 Rational ClearQuest 매트릭스는 프로젝트의 진행 상태에 대한 정확한 정보를 관리자에게 제공합니다. 즉, 언제 납품할 수 있는가? 누구에게 일의 과부하가 걸려 있나? X 버전의 베이스라인에서는 어떤 결점들이 해결되었나? 개선 요구 Y를 해결하기 위해 어떤 소스 코드가 수정되었나? 등등의 질문? ?대한 답을 얻을 수 있게 됩니다. 관리자는 ClearQuest&lt;br&gt;&amp;gt;의 유연한 질의 및 보고서 템플릿을 이용하여 원하는 형태로 데이터를 생성하거나, 미리 정해진 경향(trend), 진행(aging) 및 분배(distribution) 상태 보고서를 탐색할 수도 있습니다.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;개발자 : 개발 가속화&lt;br&gt;&amp;gt;UCM 접근법은 많은 시간이 소요되는 작업들을 자동화 시켜 개발자로 하여금 보다 수준 높은 액티비티에 작업을 집중할 수 있게 합니다. 개발자들은 단지 프로젝트에 합류하여 액티비티를 선택하는 것 만으로 자신의 작업을 신속하게 수행할 수 있습니다. ClearCase는 정확한 버전의 파일들로 개발자의 작업彭＠?활성화 시키고 관리합니다. ClearCase는 완전한 변경 집합 정보를 투명하게 그리고 은밀히 취합하고 모든 변경들이 하나의 일관된 단위로서 인도되어 다음 &lt;br&gt;&amp;gt;단계로 진행할 수 있게 합니다. Rational ClearCase는 변경 전 후의 코드를 나란히 보여주기 때문에 과거에는 몇 시간씩 걸리던 코드 재검토도 몇 분 안에 끝낼 수 있습니다. UCM 프로세스는 코드를 공유하고 분리시키는 문제에 있어 적절한 균형을 유지할 수 있게 합니다. 개인의 작업 공간은 불안정한 요소가 잠재해 있는 다른 개발자들의 변경작업으로부터 자신의 작업을 보호할 수 있게 합니다. &lt;br&gt;&amp;gt;그러나, 코드 분리 기간이 지나치게 길어지면 통합이 어려워지거나 코드 충돌 혹은 재작업이 불가피한 상황을 초래할 수도 있습니다. ClearCase는 개발자가 분리된 상태에서 작업한 후 ? 黴탔?변경 작업 결과를 팀의 가장 최근 작업결과와 비교 테스트할 수 있도록 합니다. 또한 자신의 작업 공간을 가장 최근의 프로젝트 베이스라인으로 업데이트하기 위해 주기적으로 &lt;br&gt;&amp;gt;개인의 작업 공간을 새롭게 재생시킬 수 있습니다. 이런 높은 수준의 협력적인 접근법은 개발자로 하여금 개발 초기 단계에 코드 충돌 문제를 파악할 수 있게 해주는데 이 단계에서 문제를 발견하며 해결 비용을 상당히 절감할 수 있습니다. &lt;br&gt;&amp;gt;- 스타트업(Startup) 시간이 현저히 단축됨 &lt;br&gt;&amp;gt;- 작업은 별도의 개인 작업 공간에서, 테스트는 가장 최근의 코드와 비교해서 &lt;br&gt;&amp;gt;- 개발자의 작업공간을 자동으로 유지시킴 &lt;br&gt;&amp;gt;- 변경 집합정보(Change sets)를 자동 추적 &lt;br&gt;&amp;gt;- 한 번의 조작으로 일련의 변경 집합을 인도(deliver) &lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;품질 관리자 : 품질 관리 작업 간소화 &lt;br&gt;&amp;gt;래쇼날의 변경 관리 접근법은 몇 시간에 걸쳐 어림짐작으로 이루어지는 품질 관리 작업을 구체적이면서도 실행 가능한 정보들로 대체시켰습니다. 테스트 전문가는 베이스라인과 이스라인 사이에 어떤 개선 요구와 오류 수정 작업이 있었는지를 쉽게 식별할 수 있어 기능적으로 안정성이 가장 떨어지는 부분에 작업을 집중할 수 있게 됩니다. 상세한 BOM(Bill of Materials) 보고서는 소프트웨어 빌드와 관련된 컴파일러, 운영체제, CPU, 소스 객체를 정확하게 알려주며, 엔지니어들이 발견하기 어려운 특정 설정에 따른 빌드 오류를 정확히 찾아낼 수 있도록 도와줍니다. &lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;- 진행중인 개발에는 전혀 지장을 주지 않는 가상의 "동결된(freeze)" 테스트 형상(configuration) &lt;br&gt;&amp;gt;- 파일 버전, 베이스라인, 컴포넌트들과 관련된 액티비티들을 신속하게 식별 &lt;br&gt;&amp;gt;- 정확성이 보장되는 소프트웨어 재 빌드 &lt;br&gt;&amp;gt;- Rational Suite TestStudio와의 통합으로 오류 해결 작업 간소화 &lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;릴리즈 엔지니어 :품질 관리 &lt;br&gt;&amp;gt;UCM이 있으면 릴리즈 엔지니어는 명확한 베이스라인 생성과 프로모션을 통해 소프트웨어 품질을 관리할 수 있습니다. UCM 프로세스는 베이스라인 생성을 빠르고 쉽게 해줍니다. 우선, 완료된 액티비티를 중앙의 프로젝트 통합 공간으로 가져오기 위해 개발자는 UCM 마법사를 실행시킵니다. ClearCase는 완료된 액티비티를 가져오는 동안 간단한 병합 작업은 자동 처리하고, 필요할 경우 신속히 해결할 수 있도록 코드 충돌 부분을 하이라이트로 표시하면서 모든 &lt;br&gt;&amp;gt;변경 작업 결과를 주요 개발 라인에 병합시킵니다. 다음으로 담당자 릴리즈 엔지니어는 새로운 베이스라인에 포함시킬 액티비티들을 골라냅니다. &lt;br&gt;&amp;gt;이렇게 생성된 베이스라인은 품질관리 점검 작업을 거치면서 Initial, Built, Tested, Released, Rejected 같은 일련의 품질 관리 단계를 밟아가게 됩니다. 베이스라인 관리 작업은 팀 전체에 작업에 사용할 수 있는 안정적이고 일관된 파일 버전을 제공합니다. 변경집합(Change sets)에 대한 포괄적인 정보가 제공되기 때문에 다이나믹한 환경에서 발생하는 변경 사항들을 제어, 추적할 수 있으며 경우에 따라서는 그 이전 상태로 되돌아 갈 수도 있습니다. &lt;br&gt;&amp;gt;- 16명 이상의 동시 작업 산출물까지 자동 병합 &lt;br&gt;&amp;gt;- 대규모의 빌드는 여러 개의 CPU로 분산 &lt;br&gt;&amp;gt;- 전 네트워크에 걸친 이진코드 공유로 컴파일 시간이 길어지는 것을 방지 &lt;br&gt;&amp;gt;- 정확한 소프트웨어 재 빌드를 보장하는 "BOM" 제공 &lt;br&gt;&amp;gt;- 명확한 베이스라인 프로모션을 통한 품질 관리 &lt;br&gt;&amp;gt; &lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;</content>
    <postId>44696A84-3F07-409E-BA96-50244D8C3C04</postId>
    <pubDate>2005-06-29T00:00:00-04:00</pubDate>
    <title>[re] ClearQuest Overview Doc</title>
</post>
