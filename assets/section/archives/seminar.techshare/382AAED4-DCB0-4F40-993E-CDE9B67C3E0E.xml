<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<post>
    <author>코스카</author>
    <comments/>
    <content>GNU 선언문 &lt;br&gt;The GNU Manifesto &lt;br&gt;---------------------------------------------------------------------&lt;br&gt;저작권과 사용 허가에 대한 본 사항이 명시되는 한, 어떠한 정보 매체에 의한 본문의 전재나 발췌도 허용되며 상업적 이용을 포함할 수 있는 지속적인 배포에 따른 사용상의 모든 권리는 문서의 취득자에게 조건없이 양도된다. 1993년의 개정 이후, GNU 선언문은 영구 보존문으로 남아있게 될 것이며 원문에 대한 어떠한 형태의 수정과 첨삭도 허용되지 않는다. &lt;br&gt;Original Copy: The GNU Manifesto &lt;br&gt;&lt;br&gt;&lt;br&gt;Copyright (C) 1985, 1993 Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111, USA &lt;br&gt;&lt;br&gt;Korean Translator: Ha Jaewon 하재원 &lt;br&gt;Amendment Translator: 1998 Song Changhun 송창훈 chsong@cyber.co.kr &lt;br&gt;&lt;br&gt;&lt;br&gt;----------------------------------------------------------------------&lt;br&gt;&lt;br&gt;개정본 역자 참고 사항 &lt;br&gt;2차적 저작권의 포기 여부에 상관없이 선행 작업에 대한 존중의 표시로 원역자를 통해서 문서를 개정하려고 했지만, 상당한 노력에도 불구하고 원역자와 연결될 수 없었기 때문에 다음과 같은 기준에 의해서 문서를 개정한다. &lt;br&gt;&lt;br&gt;1) GNU 정신에 입각해서 중복 작업이라는 소모적인 비효율성을 피하고 선행 작업의 노력과 성과를 가능한 그대로 유지하기 위해서 본질적인 내용 전달 상의 오역만을 수정한다. &lt;br&gt;&lt;br&gt;2) 1993년 개정문에 대한 내용들을 새롭게 첨가시킨다. &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;----------------------------------------------------------------------&lt;br&gt;GNU 선언문은 GNU 프로젝트가 시작되었을 당시, 많은 사람들의 참여와 지원을 요청하기 위해서 리차드 스톨만에 의해서 작성되었다. 처음 몇 년 동안은 프로젝트의 발전 상황을 설명하기 위해서 부분적인 개정이 이루어 졌으나 문서가 널리 확산됨에 따라서 많은 사람들이 인지하고 있는 내용 그대로를 보존하는 편이 낫다고 판단하게 되었다. &lt;br&gt;&lt;br&gt;문서에 대한 보존이 결정된 이후로, 우리는 일반적인 오해의 여지가 있는 몇몇 단어에 대한 문제점들을 알게 되었고 1993년에 주석을 첨가하는 것으로 해석상의 난점들을 명확하게 정리하였다. &lt;br&gt;&lt;br&gt;GNU 소프트웨어에 대한 최신 정보는 GNU의 게시판 (GNU's Bulletin)을 참고하기 바란다. 분량 상의 이유로 이 문서에서는 생략하기로 한다. &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;GNU란 무엇인가? GNU는 유닉스가아니다!&lt;br&gt; &lt;br&gt;&lt;br&gt;GNU란 'GNU는 유닉스가 아니다'(Gnu is Not Unix)를 의미하는 재귀적 약어다. GNU는 유닉스와 완벽하게 호환하는 소프트웨어 시스템이며 사용 가능한 모든 이가 자유롭게 사용할 수 있도록 작성한 것이다. (1) 몇몇 다른 자원자들이 도움을 주고 있으며 많은 시간적, 금전적 지원과 프로그램과 장비가 절실히 필요한 상태이다. &lt;br&gt;&lt;br&gt;지금까지 우리는 편집 명령을 작성하기 위한 인공 지능 언어 리스프(Lisp)를 갖춘 Emacs 문서 편집기, 소스 수준의 디버거(debugger), yacc 호환 파서 생성기(parser generator), 링커등 35개 가량의 유틸리티를 만들어 왔으며, 쉘(shell-명령어 번역기)은 거의 완벽한 수준에 이르렀다. 이식성 있게 최적화된 C 컴파일러가 새로이 제작되었으며 이번 해에 배포될 것이다. 이미 커널(kernel)을 갖고 있기는 하지만 유닉스를 구현하기 위해서는 보다 많은 사양들이 추가되어야 할 것이다. 커널과 컴파일러가 완성되면 프로그램 개발에 적합한 GNU 시스템을 배포할 수 있을 것이다. 우리는 문서 형식기(text formatter)로 TeX를 사용할 것이며, nroff도 여전히 사용될 것이다. 또한, 이식성을 갖춘 공개 소프트웨어인 X 윈도우 시스템도 사용할 것이다. 이런 후에 이식성을 확보한 Common Lisp, 게임 프로그램인 Empire, 스프레드시트(spreadsheet) 등과 수많은 다른 프로그램을 온라인 문서를 포함하여 추가할 것이다. 우리는 결국, 일반적인 유닉스 시스템의 모든 기능을 갖추게 될 것이다. &lt;br&gt;&lt;br&gt;GNU는 유닉스 프로그램들을 사용할 수 있게 해주지만 유닉스와 동일한 것은 아니다. 우리는 다른 운영체제에서의 경험을 살려 가능한 사용하기 편리하도록 향상을 꾀했다. 특히, 긴 길이와 복잡한 조합 형태의 파일 명을 쓸 수 있게 하고, 파일 버전을 표시하고, 견고한 파일 시스템을 구축하고, 터미널 비 의존적인 디스플레이 장치를 지원할 계획이며 최종적으로 몇 개의 리스프 프로그램과 일반적인 유닉스 프로그램이 한 화면을 나누어 쓸 수 있는 리스프 기반의 윈도우 시스템을 만들 것이다. 시스템 프로그래밍 언어로 C와 리스프 두 가지를 다 사용할 수 있을 것이다. 일대일 네트워크 기능인 UUCP(Unix to Unix Copy Program), MIT Chaosnet, 인터넷 프로토콜을 지원할 것이다. &lt;br&gt;&lt;br&gt;GNU는 본래 가상 메모리를 가진 모토롤라(motorola)사의 68000/16000 CPU 계열의 컴퓨터를 겨냥하고 제작되었다. 그 까닭은 그 기계들에서 GNU를 가장 쉽게 작동시킬 수 있기 때문이다. 보다 작은 컴퓨터에서 작동시키기 위해서는 사용하고자 하는 사람이 특별한 노력을 기울여야 할 것이다. &lt;br&gt;&lt;br&gt;심각한 혼동이 야기될 수 있으므로 'GNU'가 소프트웨어 시스템이 아닌 이 프로젝트 자체를 지칭할 때는 'GNU'의 'G'를 반드시 발음해 주기 바란다. &lt;br&gt;&lt;br&gt;왜 GNU를 작성해야만 했는가?&lt;br&gt;어떤 프로그램을 좋아한다면 당연히 그것을 좋아하는 사람들과 함께 나누는 것이 황금률(대우받고자 하는 데로 대하라-성서)이라고 생각한다. 소프트웨어를 판매하는 사람들은 사용자를 각각 구분하고, 그들 위에 군림하고, 사용자 서로가 프로그램을 공유하는 것을 막고자 한다. 나는 이런 식으로 사용자간의 결속이 깨지는 것을 거부한다. 나는 올바른 양심으로 비공개 협정이나 소프트웨어 라이센스 협약에 서명할 수 없다. 여러 해 동안 인공지능 연구소에서 일하면서 그러한 경향과 다른 박정한 일들에 저항해 보았지만 결국에는 그들의 승리로 끝나고 말았다. 내 의지에 역행하는 그런 일들이 일어나는 연구소에 나는 더이상 머무를 수가 없었다. &lt;br&gt;&lt;br&gt;내가 계속해서 명예를 손상시키지 않고 컴퓨터를 사용하기 위해서 나는 사용이 제한되는 소프트웨어들을 더이상 이용하지 않고도 작업을 해 나갈 수 있는 충분한 자유 소프트웨어의 본체를 만들 결심을 했다. 나는 MIT(Massachusetts Institute of Technology) 측이 어떠한 법률적 근거에 의해서도 GNU의 자유로운 배포를 제지하지 못하도록 하기 위해서 연구소를 그만두었다. &lt;br&gt;&lt;br&gt;유닉스와 호환성을 가지는 이유&lt;br&gt;유닉스가 이상적인 운영체제라고 생각하지는 않지만 제법 쓸만하다고 할 수 있다. 유닉스의 골자는 훌륭한 것이며 나는 유닉스의 장점을 해치지 않고도 부족한 점들을 메울 수 있으리라고 생각했다. 그리고 유닉스와 호환성을 가지면 다른 많은 사람들이 적응하기에도 편리할 것이라 생각했다. &lt;br&gt;&lt;br&gt;GNU를 사용하는 방법&lt;br&gt;GNU는 저작권이 인정되는(not public domain) 소프트웨어다. 누구나 GNU를 개작하고 배포할 수 있지만 어떤 이도 GNU가 보다 널리 배포되는 것을 제한할 수 없다. 즉, 변경한 내용을 독점할 수 없다는 것이다. 나는 모든 버전의 GNU가 공개된 채로 남아 있기를 보장받고 싶은 것이다. &lt;br&gt;&lt;br&gt;많은 프로그래머들이 동참을 원하는 이유&lt;br&gt;나는 그 동안, GNU에 흥미를 느끼고 돕고자 하는 많은 프로그래머들을 찾을 수 있었다. &lt;br&gt;&lt;br&gt;많은 프로그래머들은 시스템 소프트웨어가 상용화된 것을 불쾌하게 생각한다. 이렇게 함으로 해서 보다 더 많은 돈을 벌 수는 있겠지만 일반적으로 이런 상황에서는 프로그래머들이 서로를 동지로 느끼기보다는 투쟁해야 할 대상으로 느끼게 된다. 프로그래머들 사이의 우정을 나타내는 가장 기본적인 행동은 프로그램을 나누는 것이다. 이제는 전형적인 핵심으로 여기는 마케팅 협정은 프로그래머들이 친구로서 다른 프로그래머를 대하는 것을 금하고 있다. 소프트웨어를 구입한 자는 우정과 준법 중 하나를 선택해야만 한다. 물론 자연적으로 많은 이들이 우정을 보다 중요시한다. 그러나 법의 존재 가치를 인정하는 사람들은 어떤 결정을 내리든 편한 마음을 가질 수 없다. 그들은 냉소적이 되어 프로그래밍은 단지 돈을 버는 수단이라고 생각하게 된다. &lt;br&gt;&lt;br&gt;그러나 독점적인 프로그램들 대신 GNU를 사용하게 되면, 우리는 모든 이에게 온정을 가질 수 있으며 법도 준수하게 된다. 게다가 GNU는 공유의 표본으로써 다른 이가 우리와 함께 공유에 동참하도록 고무하는 깃발 노릇도 한다. 이는 우리가 상용 프로그램을 쓸 때는 느낄 수 없는 조화로운 느낌을 갖게 한다. 나와 대화한 프로그래머들 중 거의 반정도는 이것은 돈이 대신할 수 없는 중요한 행복이라는데 공감했다. &lt;br&gt;&lt;br&gt;당신이 기여할 수 있는 방법&lt;br&gt;나는 제조업자들에게는 기계와 돈을, 개인들에게는 프로그램과 노동을 지원해 줄 것을 요청한다. &lt;br&gt;&lt;br&gt;컴퓨터를 기증해서 기대할 수 있는 중요한 점은 GNU가 머지않아 그 기계에서 작동 할 것이란 점이다. 기증된 컴퓨터는 완전해 질 것이며 따라서, 시스템을 사용할 준비를 모두 갖추게 되어 능력과 효율을 과대 포장할 필요가 없을 것이다. &lt;br&gt;&lt;br&gt;나는 GNU를 위해 시간제로 일하기를 갈망하는 많은 프로그래머들을 찾을 수 있었다. 대부분의 프로젝트에서 이러한 시간제로 배치된 작업을 통합하고 조정하는 일은 매우 어려웠다. 독립적으로 쓰여진 부분들은 함께 동작하지 않았다. 그러나 유닉스를 이용할 경우에는 그러한 문제가 생기지 않는다. 완전한 유닉스 시스템은 개별적인 설명이 포함된 백여 개의 유틸리티를 포함한다. 대부분의 인터페이스 사양은 유닉스에 호환되도록 맞추어 진다. 만약 각각의 프로그래머가 유닉스 유틸리티 한 개를 유닉스에 호환하도록 재 구현하고 본래의 유닉스 시스템에서 충분히 작동하게 할 수 있으면, 이것들은 함께 묶어 놓아도 올바르게 작동할 것이다. 예기치 못한 문제 발생의 가능성을 고려한다 하더라도 전체적인 구성 요소들을 통합하는 작업은 충분히 가능할 것이다(커널을 만드는 작업은 세밀한 대화가 필요할 것이며, 소수의 호흡이 잘 맞는 집단이 적당할 것이다) &lt;br&gt;&lt;br&gt;만일 내가 금전적인 지원을 얻는다면 약간의 인원을 전일제나 시간제로 고용할 수 있을 것이다. 일반적인 프로그래머의 수준보다 높은 봉급을 줄 수는 없겠지만 돈을 가지는 것만큼이나 공동체 의식을 정립하는 일도 중요한 의미를 가진다고 생각하는 사람들을 찾아 볼 것이다. 이런 사람들에게 적절한 보수를 제공하는 것은 그들이 생계에 대한 절박함에서 벗어나서 보다 자유롭게 그들의 모든 역량을 GNU에 집중할 수 있도록 할 수 있는 방법이 될 것이다. &lt;br&gt;&lt;br&gt;모든 컴퓨터 사용자가 이득을 얻게 되는 이유&lt;br&gt;일단 GNU가 작성되니까, 마치 공기처럼, 모든 사람들이 훌륭한 시스템 소프트웨어를 자유롭게 얻을 수 있게 되었다. (2) &lt;br&gt;&lt;br&gt;이것은 단지 모든 이에게 유닉스의 사용에 대한 비용을 덜어 주는 것보다 훨씬 더 많은 의미를 가진다. 이는 시스템 프로그래밍에 드는 노력이 불필요하게 중복되는 것을 피할 수 있음을 의미한다. 대신, 절약된 노력은 기술 수준을 향상시키는데 사용될 것이다. &lt;br&gt;&lt;br&gt;시스템에 대한 모든 소스 코드가 모든 사람에게 제공될 것이다. 결과적으로, 시스템에 변화를 주고자 한다면 언제든지 스스로 자유롭게 수정할 수 있을 것이다. 혹은 적당한 프로그래머나 업체에 의뢰할 수도 있을 것이다. 사용자들은 더이상 프로그램 소스를 독점적으로 소유하거나 이를 수정할 수 있는 프로그래머나 회사에 의존하지 않아도 될 것이다. &lt;br&gt;&lt;br&gt;학교는 모든 학생들이 시스템 코드를 배우고 향상시키도록 장려함으로써 보다 나은 교육 환경을 조성할 수 있을 것이다. 하버드 대학의 컴퓨터 연구소에서는 어떤 프로그램이든지 그 소스가 공개되지 않으면 시스템에 설치하지 못하게 하는 정책을 쓰곤 했다. 실제로 어떤 프로그램들을 설치하지 못하게 함으로써 이 정책을 고수했다. 나는 이것에서 커다란 영감을 받게 되었다. &lt;br&gt;&lt;br&gt;결국에는, 누가 시스템 소프트웨어를 소유하고 있으며 누구에게 사용 자격을 부여할 것인가를 결정하는 문제들이 사라지게 될 것이다. &lt;br&gt;&lt;br&gt;복사 라이센스를 포함하여 프로그램 사용에 대한 지불을 준비할 때는 언제나 개인이 지불해야 할 돈이 얼마인가를 알아내야 하는 번잡한 과정에 의해서 사회에 많은 비용을 야기시킨다. 그리고, 오직 경찰 당국만이 모든 사람이 그것을 따르게 하도록 힘을 행사할 수 있다. 막대한 비용을 들여 공기를 생산하는 우주 정거장을 생각해 보자. 이런 경우 각각의 개인은 자신이 호흡하는 공기에 대해 리터(liter) 단위로 요금을 지불하는 것이 합당할 것이다. 그렇다고는 해도 호흡하는 공기의 양을 측정하기 위해서 계측기가 달린 방독면을 밤낮으로 쓰고 있어야 한다면 그런 방식은 지불 능력에 관계없이 타당한 것이 아니다. 그리고 TV 카메라는 당신이 마스크를 벗는 불법을 행하는지 어디서나 지켜보아야 할 것이며 따라서, 이것보다는 사람 수에 따라 일정한 세금을 부과하고 마스크를 벗어 던지는 것이 현명하다. &lt;br&gt;&lt;br&gt;프로그램의 일부 혹은 전체를 복제하는 행위는 프로그래머에게 있어서는 숨을 쉬는 것만큼이나 자연스러운 일이며 생산적이다. 따라서, 프로그램은 마땅히 자유롭게 사용될 수 있어야 한다. &lt;br&gt;&lt;br&gt;몇 가지 GNU의 목표에 대한 반대 의견&lt;br&gt;&amp;quot;무료라면 아무도 그것을 쓰지 않을 것이다. 왜냐하면 무료라는 것은 어떠한 지원도 기대할 수 없다는 것을 의미하기 때문이다.&amp;quot; &lt;br&gt;&lt;br&gt;&amp;quot;당신은 그 프로그램에 대한 지원과 도움을 제공하는 대가로 이에 관한 비용을 부과해야만 한다.&amp;quot; &lt;br&gt;&lt;br&gt;만약 사람들이 돈을 지불하고서 GNU에 대한 서비스를 받기를 희망한다면, GNU를 무료로 얻은 사람들에게 그런 서비스를 제공하는 회사도 이익을 얻을 수 있을 것이다. (3) &lt;br&gt;&lt;br&gt;우리는 반드시 실제 프로그래밍 작업과 단순 관리 작업을 구별해야 한다. 전자는 때때로 소프트웨어 판매 회사에게 의존할 수가 없다. 만일 당신의 문제가 보편적으로 발생되는 사안이 아니라면, 판매 회사는 그 문제를 끝까지 해결해 주려고 하지 않을 것이다. &lt;br&gt;&lt;br&gt;만일 당신의 사업이 지원에 대한 의존이 필요하다면, 필요한 모든 소스와 도구를 갖춰야 할 것이다. 그리고, 당신의 문제를 해결해 줄 수 있는 사람을 고용할 수 있을 것이다. 이것이 다른 사람의 자비를 얻는 것은 아니다. 유닉스에서는 이러한 부분에 있어서의 소스의 가격이 고려되어 있지 않지만 GNU의 경우는 이러한 문제를 용이하게 할 수 있을 것이다. 그러나, 유능한 사람을 구할 수 없을 가능성은 여전히 존재하고 이것을 배포에 따른 문제라고 비난할 수는 없다. GNU는 모든 세계의 문제를 제거하는 것은 아니며 단지 그중 하나일 뿐이다. &lt;br&gt;&lt;br&gt;한편, 컴퓨터에 대해 전혀 모르는 사용자들은 여전히 단순한 관리 서비스를 필요로 한다. 이러한 일은 사용자 스스로 능히 처리할 수 있는 종류의 일이지만 그러한 방법을 모르기 때문이다. &lt;br&gt;&lt;br&gt;이런 서비스들은 단순한 수작업이나 복구 서비스를 지원하는 회사들이 제공할 수 있다. 사용자들이 제품을 사고 그에 대한 서비스를 받는 방식을 받아들인다면, 제품을 무료로 받고 서비스에 대한 비용을 지불하는 방식에도 기꺼이 동의할 것이다. 서비스를 제공하는 회사들은 가격과 질적인 면에서 모두 완벽을 기할 수 있을 것이며 사용자들은 특정한 업체에 얽매이지 않아도 될 것이다. 또한, 그러한 서비스가 필요하지 않은 사람들은 서비스에 대한 비용을 들이지 않고도 프로그램들을 쓸 수 있을 것이다. &lt;br&gt;&lt;br&gt;&amp;quot;광고를 하지 않고는 많은 사람들에게 알릴 수 없을 것이며, 그러기 위해서는 필히 프로그램에 가격을 매겨야 한다. &lt;br&gt;&lt;br&gt;&amp;quot;무료로 제공되는 프로그램을 광고하는 것은 무의미하다.&amp;quot; &lt;br&gt;&lt;br&gt;GNU 같은 프로그램을 많은 컴퓨터 사용자들에게 알릴 수 있는 방법에는 무료 혹은 극??적은 비용으로 사용할 수 있는 다양한 정보 전파 방식이 있다. 그러나 광고를 하는 것이 보다 많은 컴퓨터 사용자에게 정보를 알릴 수 있는 방법일지도 모른다. 만일 실제로 이런 것이 사실이라면 복제와 배포를 하는데 돈을 받음으로써 능히 광고와 그 외의 부수적인 비용을 감당할 수 있을 것이다. 이런 방식에서는, 광고를 보고 배포본을 구입해서 이익을 얻을 수 있는 사용자가 광고 비용을 부담하게 되는 것이다. &lt;br&gt;&lt;br&gt;반면, 많은 사람들이 GNU를 그 친구들을 통해서 구한다면, 이런 종류의 회사들은 성공할 수 없을 것이다. 이는 GNU를 보급하는데 광고가 필요한 것은 아님을 보여준다. 그렇다고 한다면 무료로 보급되고 있다는 사실이 무료로 알려지는 것을 바라지 않을 만한 이유가 있겠는가? 자유 시장 경제에서는 광고에 의하지 않은 전파 방식 또한 충분히 가능한 것이다. (4) &lt;br&gt;&lt;br&gt;&amp;quot;나의 회사는 경쟁사들에 대한 우위를 차지하기 위해 독점적인 운영체제가 필요하다.&amp;quot; &lt;br&gt;&lt;br&gt;GNU는 시스템 소프트웨어를 경쟁이라는 범주에서 제외시킬 것이다. 당신의 회사가 우위를 차지할 수 없는 것처럼 당신의 경쟁사들도 그 점에 있어서는 마찬가지일 것이다. 당신과 당신의 경쟁사들 모두 이 분야에서는 별반 이득을 볼 수 없겠지만 다른 분야에서 서로 경쟁하는 것은 가능할 것이다. 당신의 사업이 운영체제를 판매하는 것이라면 GNU가 마땅치 않게 생각 될 것이다. 당신의 사업이 이런 종류가 아니라면 GNU는 시스템 소프트웨어에 관련된 막대한 비용을 절감해 줄 것이다. &lt;br&gt;&lt;br&gt;나는 제작자와 사용자들이 GNU의 발전에 기여해 나감으로써 서로의 비용을 절감할 수 있기를 희망한다. (5) &lt;br&gt;&lt;br&gt;&amp;quot;프로그래머는 자신의 창의력에 대한 보상을 받을 자격이 있지 않은가?&amp;quot; &lt;br&gt;&lt;br&gt;보상받을 만한 일이란 사회적 공헌을 말한다. 창의성이란 그 결과물을 사회가 대가 없이 사용할 수 있을 때 사회적 공헌이 되는 것이다. 어떤 혁신적인 프로그램을 제작한 사람이 그에 대해 보상을 받아야만 한다면, 같은 맥락에서 그것을 자유롭게 사용하지 못하게 한다면 그때는 제재를 받아야 할 것이다. &lt;br&gt;&lt;br&gt;&amp;quot;프로그래머는 그의 창의력에 대한 보상을 요구할 수 없는가?&amp;quot; &lt;br&gt;&lt;br&gt;유해한 수단을 사용하지 않는다면, 노동에 대한 보수와 자신의 소득이 극대화되기를 바라는 것은 아무 문제가 없다. 그러나 지금 까지 소프트웨어 산업에서 보편화된 수단은 유해한 방법이다. &lt;br&gt;&lt;br&gt;프로그램을 사용하는 것에 제한을 둠으로써 돈을 벌어들이는 행위는 프로그램이 사용되는 범위와 방식을 제한하기 때문에 유해한 것이다. 이는 인간들이 프로그램으로부터 얻을 수 있는 인간적인 풍요로움을 전체적으로 감소시키는 것이다. 프로그램의 자유로운 사용에 대한 제한은 결국, 유해한 파괴 행위라고 할 수 있다. &lt;br&gt;&lt;br&gt;선량한 시민이라면 자신이 보다 부유해지기 위해 그런 수단을 쓰지 않는다. 그 까닭은, 만일 모든 사람들이 그렇게 한다면 상호간의 유해한 행위로 인해 결과적으로 우리 모두는 보다 빈곤해 질 것이기 때문이다. 이것은 칸트의 윤리학(네 의지의 준칙이 언제나 보편적 입법의 원리로서 타당하게 행동하라-실천이성비판)이나 황금률같은 분명한 것이다. 나는 모든 사람들이 자기만의 정보를 축적해 나가는 것은 바람직하다고 여기지 않기 때문에, 누군가 그런 일을 한다면 그것이 잘못된 일이라고 생각한다. 특히, 한 개인의 창의성을 보장받고자 하는 욕구가 일반적으로 전체의 창의성이나 혹은 그 일부분을 저하시키는 행위를 정당화시키는 것은 않는다. &lt;br&gt;&lt;br&gt;&amp;quot;프로그래머들의 밥줄이 끊기지 않을까?&amp;quot; &lt;br&gt;&lt;br&gt;나는 모든 사람이 프로그래머가 될 필요는 없다고 답하고 싶다. 아마 우리들 대부분은 거리에 나가 인상을 써서 간신히 약간의 돈을 벌어 살아갈 수는 없을 것이다. 그러나 결과적으로, 우리는 거리에 나가 인상 써서 돈을 번다고 비난받을 필요도 없고, 또한 빈궁해질 필요도 없을 것이다. 우리는 그와는 다른 일을 할 수 있을 것이다. &lt;br&gt;&lt;br&gt;그러나 이것은, 프로그래머는 소프트웨어를 소유하지 않으면 단 한푼도 벌 수 없다 라는 질문하는 사람의 독단적인 가정을 받아 들였다는 점에서 오답이라 할 수 있다. 아마도, 이런 생각은 극단적일 것이다. &lt;br&gt;&lt;br&gt;프로그래머가 생계에 지장을 받지 않을 것에 대한 진정한 이유는 지금과 같은 정도는 아니겠지만 여전히 프로그래밍으로 돈을 벌 방법들이 있기 때문이다. &lt;br&gt;&lt;br&gt;프로그램의 복제를 제한하는 것이 소프트웨어 사업에 있어서 유일한 이윤 창출 방법은 아니다. 이런 방식이 보편화된 것은 이렇게 함으로써 가장 돈을 많이 벌 수 있기 때문이다. 고객들에 의해 이런 방식이 거부되거나 금지된다고 해도, 소프트웨어 사업은 지금까지 흔하지는 않았던 새로운 방식으로 전환해 나갈 길을 모색할 수 있을 것이다. 사업에 있어서 이윤 창출 방법은 무궁 무진한 것이다. &lt;br&gt;&lt;br&gt;아마 새로운 기반 하에서의 프로그래밍은 지금처럼 수익성이 높은 일은 아닐 것이다. 하지만 이것이 변화의 쟁점은 아니다. 지금의 판매 사원들은 그들의 봉급을 버는 방식이 불합리한 것이라고 생각하지는 않는다. 프로그래머들이 그와 같은 방법으로 소득을 올린다 해도 하등 정당하지 못할 이유가 없다(실제적으로 프로그래머들은 여전히 그들보다 월등히 많은 소득을 올리고 있다) &lt;br&gt;&lt;br&gt;&amp;quot;창작물의 사용 제한 여부는 창작자 자신이 갖고 있는 권리가 아닐까?&amp;quot; &lt;br&gt;&lt;br&gt;&amp;quot;특정 창작물에 대한 사용을 통제하는 것&amp;quot;은 결국 다른 사람들의 삶에 대한 통제를 의미한다. 이는 다른 사람들의 삶을 위축시키는 것이기 때문이다. &lt;br&gt;&lt;br&gt;지적 소유권에 관해 상세하게 공부한 사람들(변호사 등)은 그 자체로서 완벽한 지적 소유물은 없다고 주의 깊게 말한다. 정부가 인정하는 추상적인 지적 소유권들은 특정 목적을 위한 특정 법률 조항으로부터 발생한 것이다. &lt;br&gt;&lt;br&gt;예를 들어, 특허제도는 발명가가 그의 고안품의 세부 사항을 공개하는 것을 장려하고자 설립된 것이다. 그 목적은 발명한 사람을 돕기보다는 사회를 돕기 위한 것이다. 시간의 측면에서 보면, 특허가 갖는 17년간의 유효기간은 기술이 발전하는 비율과 비교해 볼 때 짧다. 특허권은 생산 업자들 사이의 문제이고 생산을 향상시키는 것과 비교해서 특허권 계약에 드는 비용과 노력은 적다고 보기 때문에 특허권은 일반적으로 그다지 해롭게 작용하지 않는다. 또한, 그것은 대부분의 개인들이 특허 받은 제품을 사용하는 것을 제한하지는 않는다. &lt;br&gt;&lt;br&gt;고대에는 저작권이라는 것이 존재하지 않았으며 그 시대의 작가들은 빈번하게 다른 이의 작품 상당량을 소설 이외의 작품에 복제하기도 했다. 이런 작업들은 유용한 것이었으며 비록, 그 일부분이기는 하지만 많은 사람들의 작품이 계속해서 전수되는(존재해 나가는) 유일한 방법이었다. 저작권 제도는 작가 의식을 고취시키려는 의도로 만들어진 것이다. 이것이 처음 만들어 질 때 주로 염두에 두었던 책의 범주에서 보면 책은 별도의 비용에 의해서 인쇄기를 사용해서만이 복제가 가능하기 때문에 저작권은 그다지 해롭지는 않았다. 또한, 대다수의 사람들이 책을 읽는 것을 제한하지도 않았다. &lt;br&gt;&lt;br&gt;모든 지적 소유권은 그것들이 어떻든지 그를 허용함으로써 사회 전체에 이득이 된다고 여겨져서 사회가 허용할 때만 정당하게 되는 것이다. 그러나 어떤 특정 상황에서든 우리는 &amp;quot;그런 허가를 내주는 것이 정말로 우리에게 유익한가? 어떤 종류의 허가를 내줄 것인가?&amp;quot; 하는 질문을 해보아야만 한다. &lt;br&gt;&lt;br&gt;오늘날의 프로그램들의 경우는 백여년전의 책의 경우와 크게 다르다. 프로그램이 이웃간에 손쉽게 복사될 수 있다는 사실, 소스 코드와 목적 코드로 구분된다는 점, 단순히 읽거나 즐기기 위해서 사용되지는 않는다는 사실들이 묶여져서 저작권을 강요하는 사람들은 사회 전체에 정신적, 물질적으로 해를 끼치는 상황을 만들고 있으며 법적 허용 여부에 상관없이 사용자들의 이용을 제한하고 있는 것이다. &lt;br&gt;&lt;br&gt;&amp;quot;경쟁함으로써 보다 나은 결과를 얻을 수 있는가?&amp;quot; &lt;br&gt;&lt;br&gt;경쟁의 기본 원리는 경주(race)이며 승자에게 상을 줌으로써 주자들이 더욱 빨리 달리도록 장려할 수 있는 것이다. 만약 자본주의가 실제로 이런 방식을 따른다면 이는 바람직한 것이다. 그러나 자본주의 옹호론자들은 실제로 항상 이런 방식으로 움직인다고 단정짓는 잘못을 범한다. 만일, 주자들이 상이 주어지는 이유를 망각한 채 승리에만 집착한다면 말할 것도 없이 그들은 다른 주자를 공격한다든지 하는 색다른 전략은 찾게 될 것이다. 주자들이 먼저 싸우기부터 한다면 그들은 결국 모두 늦어질 수밖에 없는 것이다. &lt;br&gt;&lt;br&gt;독점적이고 비밀에 싸인 소프트웨어는 도덕적으로 먼저 싸우기부터 하는 주자들과 동일하다. 슬픈 일이지만 우리의 유일한 심판은 그다지 공정해 보이지 않으며 &amp;quot;매 10 야드(yard)마다 한번씩 상대방을 가격할 수 있다.&amp;quot;는 규정을 적용하는 정도일 것이다. 싸움에 대한 조짐이 있을 때조차도 벌칙을 주어야 하는데도 말이다. &lt;br&gt;&lt;br&gt;&amp;quot;금전적인 특혜가 없다면 아무도 프로그래밍을 하지 않을 것이다.&amp;quot; &lt;br&gt;&lt;br&gt;실제적으로, 많은 사람들이 분명한 금전적인 특혜가 없이도 프로그래밍을 할 것이다. 프로그래밍은 어떤 사람들에게는 저항할 수 없는 매력인 것이며 보통 프로그래밍에 능숙한 사람에게 더욱 그렇다. 비록 생활의 기반이 될 가망이 없더라도 꾸준히 계속해 가는 직업적인 음악인들이 많이 있다. &lt;br&gt;&lt;br&gt;그러나 실제로 이 질문은 비록 일반적으로 많이 제기 되지만 조금은 다른 관점의 문제라고 할 수 있다. 프로그래머들의 소득원이 없어지는 것이 아니라 단지 수입이 줄어드는 것이기 때문이다. 따라서, 올바른 질문은 &amp;quot;금전적인 보상이 줄어들더라도 사람들이 프로그래밍을 하게 될까?&amp;quot;일 것이다. 내 경험에 의하면 그렇게 할 것이라고 생각한다. &lt;br&gt;&lt;br&gt;십년 이상 동안, 세계 정상급 프로그래머들이 인공 지능 연구소에서 일했었지만 그들이 받은 보수는 다른 어떤 곳에서 기대할 수 있는 것보다 훨씬 적은 것이었다. 그들은 사회적 인정이나 명성과 같은 다양한 종류의 비금전적인 보상을 받았다. 그리고 창의력은 그 자체가 이미 보상과 흥미를 내포하고 있는 것이다. &lt;br&gt;&lt;br&gt;그후, 그들 대부분은 이전의 작업처럼 그들이 흥미롭게 생각하는 일을 높은 보수를 받으며 할 수 있는 기회가 주어지자 연구소를 떠났다. &lt;br&gt;&lt;br&gt;이 사실에서 알 수 있는 것은 사람들은 부유해지기보다는 나름대로의 어떤 까닭을 위해서 프로그래밍을 한다는 것이며 그런 조건 위에 상당한 보수까지 받을 기회가 주어진다면 그를 예상하고 요구하게 되는 것이다. 보수가 낮은 조직은 높은 보수를 받는 조직과의 경쟁에서 뒤지겠지만 만일, 높은 보수를 받는 조직이 허용되지 않는다면 훌륭하게 활동할 수 있을 것이다. &lt;br&gt;&lt;br&gt;&amp;quot;우리는 프로그래머가 절대적으로 필요하다. 만일 그들이 우리의 이웃을 돕지 말라 하면 우리는 따를 수밖에 없다.&amp;quot; &lt;br&gt;&lt;br&gt;당신들은 결코 그런 종류의 요구에 복종해야 할만큼 절박하지 않다. 명심하라. 열 장정이 도둑 하나를 막지 못하는 법이다. &lt;br&gt;&lt;br&gt;&amp;quot;프로그래머들도 어떤 식으로든 그들의 생계를 꾸려 나가야 하지 않은가?&amp;quot; &lt;br&gt;&lt;br&gt;요컨대 이것은 진실이다. 그러나 프로그램의 사용에 대한 권리를 파는 것 이외에도 생계를 꾸릴 수 있는 수많은 방법들이 있다. 현재 사용에 대한 권리를 파는 것이 보편적으로 받아들여지는 것은 그런 방식으로 프로그래머나 사업자들이 보다 많은 돈을 벌 수 있기 때문이지 결코 이것이 생계를 유지하는 유일한 방법이기 때문은 아니다. 다른 방법을 찾고자 한다면 얼마든지 가능할 것이다. 여기 여러 가지 예들이 있다. &lt;br&gt;&lt;br&gt;새로운 컴퓨터를 내놓는 제조업자는 새 기계에 운영체제를 이식하기 위한 비용을 지불하게 된다. &lt;br&gt;&lt;br&gt;교육, 단순 관리 작업, 지속적인 서비스들을 제공하는 회사에서도 역시 프로그래머는 필요한 것이다. &lt;br&gt;&lt;br&gt;사용자의 마음에 흡족하다면 그에 대한 기부를 지원해 달라고 요구하는 프리웨어(freeware)라는 새로운 아이디어로 프로그램을 배포하는 사람들도 있다. 혹은 단순 관리 서비스를 제공하고 보수를 받는 사람들도 있다. 나는 이미 이런 방식으로 성공한 사람들을 만났다. &lt;br&gt;&lt;br&gt;도움이 필요한 사용자들은 사용자 그룹을 결성하고 회비를 조성할 수 있을 것이다. 그룹은 프로그래밍 회사와 계약을 맺고 회원들이 원하는 프로그램을 주문 제작할 수 있을 것이다. &lt;br&gt;&lt;br&gt;모든 종류의 발전에 필요한 기금은 소프트웨어에 대한 세금으로 조성할 수 있을 것이다. &lt;br&gt;&lt;br&gt;만약, 컴퓨터를 구입하는 모든 사람들이 가격의 몇 퍼센트를 소프트웨어에 대한 세금으로 지불해야 한다면, 정부는 그 돈이 소프트웨어 발전에 쓰여지도록 국립 과학 재단(NSF-National Science Foundation) 같은 단체에 위임할 수 있을 것이다. &lt;br&gt;&lt;br&gt;여기에는 컴퓨터 구입자가 세금을 납부하는 것 대신에 개별적으로 소프트웨어의 발전을 위해서 특정 부문에 기부하는 형식이 포함될 수 있을 것이다. 그는 스스로 어느 프로젝트에 기부할 것인지를 결정할 수 있을 것이며 때론, 그 결과를 쓸 수 있을 것이란 기대를 품고 결정을 내리게 될 것이다. 얼마를 기부하든 지불해야 할 세금 전액을 대신할 수 있을 것이다. &lt;br&gt;&lt;br&gt;세금의 전체적인 세율은 납세자들이 투표를 해서 결정할 수 있을 것이며 지불할 액수에 따라 차등 조정될 것이다. &lt;br&gt;&lt;br&gt;따라서, 결론은 다음과 같다: &lt;br&gt;&lt;br&gt;컴퓨터 사용자 공동체는 소프트웨어의 발전을 지원한다. &lt;br&gt;&lt;br&gt;어느 수준의 지원을 할 것인가에 대한 사항을 공동체 모두가 함께 결정한다. &lt;br&gt;&lt;br&gt;자신의 몫이 어떤 프로젝트에 쓰일 것인가에 관심 있는 사용자들은 이를 스스 결정 할 수 있다. &lt;br&gt;&lt;br&gt;프로그램을 자유롭게 만든다는 것은 결국, 더이상 생계를 위해 고되게 일할 필요가 없는 풍요로운 세계로 가는 한 단계인 것이다. 사람들은 법률 제정이나 가정 상담, 로보트 수리, 천체 관측 등의 주당 열 시간 정도의 근무 시간을 마친 후에는 프로그래밍과 같은 자신이 흥미를 가질 수 있는 일에 자신을 몰입할 수 있는 자유를 갖게 될 것이다. 더이상 프로그래밍을 생계의 수단으로 삼을 필요가 없게 될 것이다. &lt;br&gt;&lt;br&gt;우리가 이미 풍요로운 사회를 만들기 위해 많은 일들을 했음에도 불구하고 여가 시간이 아직 충분히 보장되지 않고 있는 이유는 자유 경쟁에 반하는 관료 제도와 저항들에 의해서 생산적인 활동에 많은 비생산적 요소들이 개입되기 때문이다. 자유 소프트웨어는 이러한 문제들을 충분히 개선시켜 나갈 수 있을 것이고 그렇게 함으로써 풍요를 위한 우리의 기술적 성과들이 우리들 자신의 노동을 감소시킬 수 있도록 해야 할 것이다. &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;----------------------------------------------------------------------&lt;br&gt;각 주 &lt;br&gt;(1) 자유라는 의미를 명확하게 설명하지 못했다. 본래의 의도는 GNU 시스템을 사용 하기 위해서 '사용 허가'에 대한 별도의 비용을 지불할 필요가 없다는 뜻이다. 이러한 점을 명확히 하지 않음으로 해서 GNU 프로그램은 항상 무료나 이에 준 하는 가격에 의해서만 제공된다는 잘못된 해석이 가능할 수 있었다. GNU 선언 문은 이러한 부분에 대해서 이윤 추구를 위한 상업적 배포 업체 또한 충분히 가능할 수 있다는 사실을 뒤에 언급하고 있다. 나는 금전적인 측면의 자유와 구속되지 않는다는 관점에서의 자유를 주의 깊게 구분해서 사용해야 한다는 교 훈을 얻게 되었다. 자유 소프트웨어란 사용자가 배포와 수정의 자유를 갖는 소프트웨어를 의미한다. 자유 소프트웨어는 유료 또는 무료로 구입할 수 있 으며 유료 구입에 의한 기금의 확충은 해당 소프트웨어를 보다 우수하게 향상 시키는데 기여할 수 있을 것이다. 자유 소프트웨어의 핵심은 소프트웨어의 자 유로운 이용을 통해서 사용자 상호간의 협력의 자유를 보장받는다는 데 있다. &lt;br&gt;&lt;br&gt;(2) 자유라는 두 가지 다른 의미 중에서 본래의 의도를 명확히 제시하지 못한 것 같다. 자유가 다른 의미를 내포할 수도 있지만 여기서는 가격을 지불하지 않는 다는 뜻으로 사용된 것이다. 즉, GNU 소프트웨어는 친구나 네트워크를 통해서 무료로 얻을 수 있다. &lt;br&gt;&lt;br&gt;(3) 이러한 종류의 몇몇 회사들이 이미 활동하고 있다. &lt;br&gt;&lt;br&gt;(4) 자유 소프트웨어 재단은 이윤 추구를 목적으로 하지 않음에도 불구하고 대부분 의 운영 자금을 배포본 판매에 따른 수익금에 의해서 충당하고 있다. 아무도 우리로부터 제품을 구입하지 않는다면 우리는 재단을 지탱해 나가지 힘들게 될 것이다. 그러나, 이것이 모든 사용자에게 유료 구입을 강요하는 제한 사항이 될 수는 없다. 제품 구입에 대한 소수의 도움으로도 자유 소프트웨어 재단은 충분히 유지될 수 있으며 우리는 일반 사용자들이 이러한 방식으로 우리를 지 원해 주기를 요청한다. &lt;br&gt;&lt;br&gt;(5) 최근 들어 컴퓨터 회사들의 모임 중 하나는 GNU C 컴파일러의 개발을 지원하기 위한 기금을 조성했다. &lt;br&gt;&lt;br&gt;---------------------------------------------------------------------</content>
    <postId>382AAED4-DCB0-4F40-993E-CDE9B67C3E0E</postId>
    <pubDate>2001-08-12T00:00:00-04:00</pubDate>
    <title>The GNU Manifesto</title>
</post>
